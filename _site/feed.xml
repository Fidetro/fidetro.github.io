<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FoolishTalk</title>
    <description></description>
    <link>http://www.foolishtalk.org/</link>
    <atom:link href="http://www.foolishtalk.org/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 09 Jul 2020 23:27:04 +0800</pubDate>
    <lastBuildDate>Thu, 09 Jul 2020 23:27:04 +0800</lastBuildDate>
    <generator>Jekyll v3.3.0</generator>
    
      <item>
        <title>Mac App公证</title>
        <description>&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;

&lt;p&gt;从非Mac AppStore的地方下载的App，大家应该都有遇到过这样的提示：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/IMG_4487.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;遇到这种情况，可以在终端输入，将&lt;code class=&quot;highlighter-rouge&quot;&gt;安全性与隐私-通用-任何来源&lt;/code&gt;开启，这样就可以解决了：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo spctl --master-disable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://images.foolishtalk.org/b763e24905260962b5f85903f86472d5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但是作为一个普通用户，会认为你的App不安全，我开发的虚拟定位因为需要依赖非沙盒环境下的Magellan，也遇到这个问题，也有国外用户因为觉得这个行为是有风险，在AppStore给了个差评。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://images.foolishtalk.org/9d72a50bedcd69db68dbe4777d16b83f.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;从设置上看，用户是可以通过选择&lt;code class=&quot;highlighter-rouge&quot;&gt;App Store和被认可的开发者&lt;/code&gt;下载非App Store来源的应用的，问题是怎样才能成为被认可的开发者呢？&lt;/p&gt;

&lt;h1 id=&quot;正文&quot;&gt;正文&lt;/h1&gt;

&lt;p&gt;Mac上通过&lt;code class=&quot;highlighter-rouge&quot;&gt;Gatekeeper&lt;/code&gt;的技术来确保用户运行的是自己信任的App,在&lt;code class=&quot;highlighter-rouge&quot;&gt;App Store&lt;/code&gt;上架之前应用是经过&lt;code class=&quot;highlighter-rouge&quot;&gt;Apple&lt;/code&gt;签名的，通过这种方式保证App没有被修改。&lt;/p&gt;

&lt;p&gt;而从第三方网站或软件中下载的App，则需要提交应用给Apple进行公证，公证结束后再对其签名，用户下载的时候弹窗就会变成这样：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/IMG_4488.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;公证的方式有两种，一种是通过Xcode Archives后在&lt;code class=&quot;highlighter-rouge&quot;&gt;Organizer&lt;/code&gt;进行操作，另一种方式是通过脚本自定义workflow。&lt;/p&gt;

&lt;h2 id=&quot;xcode&quot;&gt;Xcode&lt;/h2&gt;
&lt;p&gt;通过 Xcode导航栏上方 「Product」-&amp;gt;「Archives」,选择「Distribute App」-&amp;gt; 「Developer ID」-&amp;gt; 「Upload」&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/4408719a68ebdffd9d939200a4458fd9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上传完成后，等苹果回复认证通过的邮件后，再次选择「Distribute App」-&amp;gt; 「Developer ID」-&amp;gt; 「Export」，这时候导出的包就是已经被苹果公证过的了。&lt;br /&gt;
苹果公证邮件回复的很快，官方文档提到一般一小时内会回复，我一般5-10分钟就会收到了。&lt;/p&gt;

&lt;h2 id=&quot;workflow&quot;&gt;Workflow&lt;/h2&gt;
&lt;p&gt;我自己用的是脚本打包，因为mac上打包主要以dmg的形式为主，另外dSYM也需要上传到App Center上，自定义workflow更适合我。&lt;/p&gt;

&lt;p&gt;先用Xcode打包的方式执行一次，将导出后文件夹中的&lt;code class=&quot;highlighter-rouge&quot;&gt;ExportOptions.plist&lt;/code&gt;复制到工程目录下，即&lt;code class=&quot;highlighter-rouge&quot;&gt;$SRCROOT/ExportOptions.plist&lt;/code&gt;下，等下会用到。&lt;/p&gt;

&lt;p&gt;新建个构建脚本文件，放工程目录下：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#App名字&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;PRODUCT_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;xxx
&lt;span class=&quot;nv&quot;&gt;CONFIGURATION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Release
&lt;span class=&quot;c&quot;&gt;#SCHEME名字&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;BUILD_SCHEME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;xxx

&lt;span class=&quot;nv&quot;&gt;CLEAN_COMMAND&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;xcodebuild -workspace &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PRODUCT_NAME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.xcworkspace -scheme &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;BUILD_SCHEME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -configuration &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CONFIGURATION&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -sdk macosx&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;BUILD_COMMAND&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;xcodebuild archive -workspace &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PRODUCT_NAME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.xcworkspace -scheme &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;BUILD_SCHEME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -configuration &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CONFIGURATION&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -sdk macosx -archivePath &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PRODUCT_NAME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.xcarchive&quot;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$CLEAN_COMMAND&lt;/span&gt; clean
&lt;span class=&quot;nv&quot;&gt;$BUILD_COMMAND&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;苹果不建议我们使用明文的密码，通过下面的命令，将密码放进钥匙串：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcrun altool --store-password-in-keychain-item &lt;span class=&quot;s2&quot;&gt;&quot;AC_PASSWORD&quot;&lt;/span&gt; -u &lt;span class=&quot;s2&quot;&gt;&quot;开发者账号邮箱&quot;&lt;/span&gt; -p &lt;span class=&quot;s2&quot;&gt;&quot;apple id专用密码&quot;&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;不知道什么是专用密码的，可以看&lt;a href=&quot;https://support.apple.com/zh-cn/HT204397&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;将下面的脚本调整后，放入Post-actions中&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/7d1045b183241672996953e235bec078.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcodebuild -exportArchive -archivePath &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ARCHIVE_PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; -exportOptionsPlist &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SRCROOT&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/ExportOptions.plist&quot;&lt;/span&gt; -exportPath &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$EXPORT_PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;APP_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$EXPORT_PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PRODUCT_NAME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.app&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ZIP_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$EXPORT_PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PRODUCT_NAME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.zip&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#如果不是打包成dmg，.app需要压缩成zip上传&lt;/span&gt;
ditto -c -k --keepParent &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$APP_PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ZIP_PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#这里的ProviderShortname，其实是你的开发者账号的team id，可以通过https://developer.apple.com/account 「Membership」查看&lt;/span&gt;
xcrun altool --notarize-app --primary-bundle-id &lt;span class=&quot;s2&quot;&gt;&quot;com.bundle.id&quot;&lt;/span&gt; --username &lt;span class=&quot;s2&quot;&gt;&quot;AC_USERNAME&quot;&lt;/span&gt; --password &lt;span class=&quot;s2&quot;&gt;&quot;@keychain:AC_PASSWORD&quot;&lt;/span&gt; --asc-provider &amp;lt;ProviderShortname&amp;gt; --file &lt;span class=&quot;nv&quot;&gt;$ZIP_PATH&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;上传完之后，控制台上会打印&lt;code class=&quot;highlighter-rouge&quot;&gt;RequestUUID&lt;/code&gt;,如果不成功或者想查询审核状态都需要这个id，也可以通过后面查询当前所有请求状态的命令查到&lt;code class=&quot;highlighter-rouge&quot;&gt;RequestUUID&lt;/code&gt;。&lt;br /&gt;
审核通过后，对app签入公证即可：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcrun stapler staple &lt;span class=&quot;s2&quot;&gt;&quot;xxx.dmg&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;查询当前所有请求状态&quot;&gt;查询当前所有请求状态&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcrun altool --notarization-history 0 -u &lt;span class=&quot;s2&quot;&gt;&quot;AC_USERNAME&quot;&lt;/span&gt; -p &lt;span class=&quot;s2&quot;&gt;&quot;@keychain:AC_PASSWORD&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;会返回你所有请求的状态&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Notarization History - page 0

Date                      RequestUUID                          Status      Status Code Status Message  
------------------------- ------------------------------------ ----------- ----------- ----------------
2018-07-02 20:32:01 +0000 2EFE2717-52EF-43A5-96DC-0797E4CA1041 invalid     2           Package Invalid 
2018-06-29 13:23:13 +0000 6D020E28-9890-48E5-851C-4275169D07CC invalid     2           Package Invalid

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;查询某个请求的详细信息&quot;&gt;查询某个请求的详细信息&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcrun altool --notarization-info &lt;span class=&quot;nv&quot;&gt;$替&lt;/span&gt;换成自己的RequestUUID -u &lt;span class=&quot;s2&quot;&gt;&quot;AC_USERNAME&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;如果有审核有问题，LogFileURL会提供日志文件，指出发现的问题，修改完后重新提交即可。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   RequestUUID: 2EFE2717-52EF-43A5-96DC-0797E4CA1041
          Date: 2018-07-02 20:32:01 +0000
        Status: invalid
    LogFileURL: https://osxapps.itunes.apple.com/...
   Status Code: 2 
Status Message: Package Invalid
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;写在最后的一些感触&quot;&gt;写在最后的一些感触&lt;/h1&gt;
&lt;p&gt;虽然是个并不麻烦的事情，但是很多大厂的App都没有做这个，感觉都是国内用户惯的，需要用户去适应App，而不是App迎合用户。&lt;/p&gt;

&lt;h1 id=&quot;参考链接&quot;&gt;参考链接&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/xcode/notarizing_macos_software_before_distribution&quot;&gt;Notarizing macOS Software Before Distribution&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/developer-id/&quot;&gt;Signing Your Apps for Gatekeeper&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://support.apple.com/en-us/HT202491&quot;&gt;Safely open apps on your Mac&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/documentation/xcode/notarizing_macos_software_before_distribution/customizing_the_notarization_workflow&quot;&gt;Customizing the Notarization Workflow&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Jul 2020 00:00:00 +0800</pubDate>
        <link>http://www.foolishtalk.org/2020/07/08/Mac-App%E5%85%AC%E8%AF%81/</link>
        <guid isPermaLink="true">http://www.foolishtalk.org/2020/07/08/Mac-App%E5%85%AC%E8%AF%81/</guid>
        
        <category>iOS</category>
        
        <category>Xcode</category>
        
        
      </item>
    
      <item>
        <title>你真的了解p、po、v区别吗</title>
        <description>&lt;h1 id=&quot;正文&quot;&gt;正文&lt;/h1&gt;
&lt;p&gt;平常在使用Xcode断点调试问题时，&lt;code class=&quot;highlighter-rouge&quot;&gt;po&lt;/code&gt;可能是最常用到的&lt;code class=&quot;highlighter-rouge&quot;&gt;LLVM&lt;/code&gt;命令了。&lt;br /&gt;
通过&lt;code class=&quot;highlighter-rouge&quot;&gt;po&lt;/code&gt;命令，我们可以在Xcode的&lt;code class=&quot;highlighter-rouge&quot;&gt;LLDB&lt;/code&gt;控制台打印对象的描述，系统在运行时会提供一个默认值，如图：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/caed4a8d6cbafa4387d2fb57155cf6e7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们可以通过重写&lt;code class=&quot;highlighter-rouge&quot;&gt;func debugDescription()&lt;/code&gt;达到我们希望在&lt;code class=&quot;highlighter-rouge&quot;&gt;po&lt;/code&gt;的时候返回预期的返回值。&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/54e45465efc65c1b4fd93f2d8995ea4e.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;po&lt;/code&gt;的底层逻辑实现：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/57320d88124faf7812bbaa673f37fee4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;事实上打印对象有三种方法，&lt;code class=&quot;highlighter-rouge&quot;&gt;po&lt;/code&gt;只是其中一种。&lt;/p&gt;

&lt;p&gt;第二种方式是&lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;po&lt;/code&gt;的区别在于，&lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt;不会随着&lt;code class=&quot;highlighter-rouge&quot;&gt;func debugDescription()&lt;/code&gt;方法修改而且改变打印的值。
&lt;img src=&quot;http://images.foolishtalk.org/0bb5fdda413e64e8b3ba45c58d1c2ec3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但是&lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;po&lt;/code&gt;，遵循swift的语法，在下面的例子中，是无法打印的。&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/f65d30492a3fc575e641976544a7aa1e.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
同样下面的代码也会报错：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-Swift&quot;&gt;    let student : Person = Student(name:&quot;john&quot;)
    print(student.name) //这里是会报错的
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt;的底层逻辑实现：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/e2b0f3feefd02283937b5230a420110d.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;第三种方式是通过&lt;code class=&quot;highlighter-rouge&quot;&gt;v&lt;/code&gt;打印。&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;v&lt;/code&gt;同样不会不会随着&lt;code class=&quot;highlighter-rouge&quot;&gt;func debugDescription()&lt;/code&gt;方法修改而且改变打印的值。&lt;br /&gt;
而且&lt;code class=&quot;highlighter-rouge&quot;&gt;v&lt;/code&gt;有自己的语法，不需要通过编译，而是进行动态类型解析，但是它无法执行代码。&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/849c0b54225807f00201d31cd8bf072c.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;v&lt;/code&gt;的底层逻辑实现：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/67340b5668cffd5d75e007e1839d46fd.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;总结&quot;&gt;总结&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;po&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;p&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;v&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;显示对象的方式&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;通过对象描述方法打印&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;通过格式化打印&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;通过格式化打印&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;计算结果的方式&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;通过编译表达，可以完整访问编程语言&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;通过编译表达，可以完整访问编程语言&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;有自己的语法、解释和表达，解释过程中会多次动态类型解析&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;参考链接&quot;&gt;参考链接&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2019/429/&quot;&gt;LLDB: Beyond “po”&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 01 Jun 2020 00:00:00 +0800</pubDate>
        <link>http://www.foolishtalk.org/2020/06/01/%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BA%86%E8%A7%A3p-po-v%E5%8C%BA%E5%88%AB%E5%90%97-copy/</link>
        <guid isPermaLink="true">http://www.foolishtalk.org/2020/06/01/%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BA%86%E8%A7%A3p-po-v%E5%8C%BA%E5%88%AB%E5%90%97-copy/</guid>
        
        <category>iOS</category>
        
        <category>Xcode</category>
        
        
      </item>
    
      <item>
        <title>Modify phone positioning via Magellan</title>
        <description>&lt;h1 id=&quot;installation&quot;&gt;Installation:&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Firstly, download &lt;a href=&quot;https://apps.apple.com/cn/app/%E8%99%9A%E6%8B%9F%E5%AE%9A%E4%BD%8D/id1459663647?mt=12&quot;&gt;Virtual Location App&lt;/a&gt; and &lt;a href=&quot;https://www.foolishtalk.org/magellan/magellan.dmg&quot;&gt;Magellan App&lt;/a&gt;. It requires running both these two apps to modify the location.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;There is an ico at system navigation bar as following after &lt;code class=&quot;highlighter-rouge&quot;&gt;Magellan App&lt;/code&gt; running successfully.&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/bc9e8955850855ca07147e65957f8087.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Connect the mobile phone to your computer, then choose your personal mobile.&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/d944f3a7aa0e20280cb65dff013839e6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If there is no installing the driver before, please click to &lt;code class=&quot;highlighter-rouge&quot;&gt;Install the driver &lt;/code&gt;firstly.&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/0d0da9bb126e3bd24ebfb83bd16ef3c0.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It will download the driver automatically for the first installing.&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/0fcda7c41ae4197d268c1a01bb2392a8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Please click &lt;code class=&quot;highlighter-rouge&quot;&gt;Install the Driver&lt;/code&gt; again after download successfully. After installation successfully, there will be following tips.&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/15393a5bdbede13840e344e94f5d4946.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;It need to run &lt;code class=&quot;highlighter-rouge&quot;&gt;Magellan app&lt;/code&gt; again after installation.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;operation&quot;&gt;Operation:&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Open &lt;code class=&quot;highlighter-rouge&quot;&gt;Virtual Location App&lt;/code&gt;&lt;br /&gt;
There are two ways to modify the position as followings:&lt;br /&gt;
(1) &lt;br /&gt;
Select &lt;code class=&quot;highlighter-rouge&quot;&gt;Move By double-click&lt;/code&gt;. Double click the map on &lt;code class=&quot;highlighter-rouge&quot;&gt;Virtual Location App&lt;/code&gt;. Then you will find your position on mobile phone has already changed.&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/162dbbf387c59ed6947ae015fa298fba.png&quot; alt=&quot;&quot; /&gt;
(2) &lt;br /&gt;
① Double click the map on Virtual Location without selecting &lt;code class=&quot;highlighter-rouge&quot;&gt;Move by double-click&lt;/code&gt;. There will be generated multi-spots on the map as picture shows.&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/9c7ff0c8547f7eeea693ae78f877d000.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;② Please input Speed and click &lt;code class=&quot;highlighter-rouge&quot;&gt;Run by route&lt;/code&gt; finally. You will find your mobile phone is moving along programmed route.&lt;/p&gt;

&lt;p&gt;If there are any questions, please feel free to contact me and send email to zykzzzz@hotmail.com. 
In most case, it is better to provide the log file will be helpful. Please click &lt;code class=&quot;highlighter-rouge&quot;&gt;Export log file&lt;/code&gt; to generate the log file by &lt;code class=&quot;highlighter-rouge&quot;&gt;Magellan App&lt;/code&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 19 Apr 2020 00:00:00 +0800</pubDate>
        <link>http://www.foolishtalk.org/2020/04/19/magellan_en/</link>
        <guid isPermaLink="true">http://www.foolishtalk.org/2020/04/19/magellan_en/</guid>
        
        <category>iOS</category>
        
        <category>Xcode</category>
        
        
      </item>
    
      <item>
        <title>mac连接蓝牙音箱问题小记</title>
        <description>&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;

&lt;p&gt;过年的时候，公司发了个蓝牙音箱，我的Mac Pro左声道已经坏了很久了，正好可以拿来当音箱用。&lt;br /&gt;
但是电脑连了蓝牙音箱后，一直会卡卡的和出现沙沙的声音，手机却没有问题，猜想是因为电脑码率比较高导致，带着这个猜想开始搜索相关的一些问题，发现原来不止这款音箱会，别的一些蓝牙设备，包括AirPods也会出现这样的问题。&lt;/p&gt;

&lt;h1 id=&quot;正文&quot;&gt;正文&lt;/h1&gt;

&lt;p&gt;先上一组电脑在放歌时的传输速率：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/39ce65c86ee89caeba6d367d0f82786d.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;通过这组数据可以知道，在听歌的时候，传输速度约为 39000 Bytes/s,即 312 kbit/s（1 kbit/s = 125 Bytes/s）&lt;/p&gt;

&lt;p&gt;而我们公司的蓝牙音箱使用的是SBC编码器（小tips：按住option点击导航栏的蓝牙图标，可以查看蓝牙设备的信息）&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/347335e73c15512f3125ee4d60bac4f3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;原因&quot;&gt;原因&lt;/h2&gt;
&lt;p&gt;SBC编码器中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;bitpool&lt;/code&gt; 参数会导致音质下降，通过&lt;a href=&quot;http://soundexpert.org/encoders-320-kbps&quot;&gt;这里&lt;/a&gt;可以知道 SBC编码器 在 328 kbit/s 时 bitpool 需要达到 53。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://images.foolishtalk.org/ec4f4917854d7eab2b26196d3348df60.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;问题原因知道了，这样就好解决了。&lt;/p&gt;

&lt;h1 id=&quot;怎么解决&quot;&gt;怎么解决？&lt;/h1&gt;
&lt;p&gt;先去苹果开发者官网下载&lt;a href=&quot;https://developer.apple.com/download/more/?=additional%20Tools&quot;&gt;Bluetooth Explorer&lt;/a&gt;工具&lt;/p&gt;

&lt;p&gt;下载完之后，打开 Hardware，把 &lt;code class=&quot;highlighter-rouge&quot;&gt;Bluetooth Explorer&lt;/code&gt; 拖到应用程序里。&lt;br /&gt;
打开 &lt;code class=&quot;highlighter-rouge&quot;&gt;Bluetooth Explorer&lt;/code&gt; 后，在系统导航栏找到 &lt;code class=&quot;highlighter-rouge&quot;&gt;Audio Options...&lt;/code&gt;
&lt;img src=&quot;http://images.foolishtalk.org/c1bfcd07315439afe2f2fd3ecdc744f4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;为了方便我就直接把这里 &lt;code class=&quot;highlighter-rouge&quot;&gt;Minimum bitpool&lt;/code&gt; 改到64了：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/72d3eb4294d65375471054d6f1d290cc.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;另外如果有需要修改编码器的需求，改上面 &lt;code class=&quot;highlighter-rouge&quot;&gt;Codecs&lt;/code&gt; 的设置就好了。&lt;/p&gt;

&lt;p&gt;断开蓝牙设备，再连设备，就会发现没有之前的卡顿和沙沙的声音。&lt;/p&gt;

&lt;h1 id=&quot;题外话&quot;&gt;题外话&lt;/h1&gt;
&lt;p&gt;网上的文章真是一大抄，通过终端设置 &lt;code class=&quot;highlighter-rouge&quot;&gt;bitpool&lt;/code&gt; 的方法似乎已经失效了，另外我也试过重启 &lt;code class=&quot;highlighter-rouge&quot;&gt;PRAM&lt;/code&gt;，依然无效，如果有通过终端设置的方式，请告诉我，非常感谢。&lt;/p&gt;

&lt;h1 id=&quot;参考链接&quot;&gt;参考链接&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.areilly.com/2017/07/29/enabling-aac-and-aptx-over-bluetooth-on-macos/&quot;&gt;enabling aac and aptx over bluetooth on macos&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://apple.stackexchange.com/questions/167245/yosemite-bluetooth-audio-is-choppy-skips/259954#259954&quot;&gt;Yosemite bluetooth audio is choppy/skips&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 10 Jan 2020 00:00:00 +0800</pubDate>
        <link>http://www.foolishtalk.org/2020/01/10/mac%E8%BF%9E%E6%8E%A5%E8%93%9D%E7%89%99%E9%9F%B3%E7%AE%B1%E9%97%AE%E9%A2%98%E5%B0%8F%E8%AE%B0/</link>
        <guid isPermaLink="true">http://www.foolishtalk.org/2020/01/10/mac%E8%BF%9E%E6%8E%A5%E8%93%9D%E7%89%99%E9%9F%B3%E7%AE%B1%E9%97%AE%E9%A2%98%E5%B0%8F%E8%AE%B0/</guid>
        
        <category>iOS</category>
        
        <category>蓝牙</category>
        
        
      </item>
    
      <item>
        <title>pip折腾记</title>
        <description>&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;

&lt;p&gt;最近在公司的新电脑上，要用到一个python2编写的库，发现python版本默认已经是3.0了，pip也是默认使用pip3，但是网上很多是使用pip去安装环境，为了折腾这个环境，花了好长时间，记录一下。&lt;/p&gt;

&lt;h1 id=&quot;正文&quot;&gt;正文&lt;/h1&gt;
&lt;p&gt;pip安装先把安装的脚本下载下来：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget curl https://bootstrap.pypa.io/get-pip.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;如果默认的是python3，需要用指定python版本：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo python2.7 get-pip.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;安装的过程中，会发现各种超时，原因是要翻墙。我是通过privoxy实现http代理，如果环境没装，自己安装一下：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install privoxy
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果brew安装太慢。。。再挂下代理：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export ALL_PROXY=socks5://127.0.0.1:portnumber
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在配置文件&lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/etc/privoxy/config&lt;/code&gt;下面加上监听的端口号，以及本地socks5代理的端口号：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;listen-address 0.0.0.0:8118
forward-socks5 / localhost:1080 .
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;启动privoxy：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo /usr/local/sbin/privoxy /usr/local/etc/privoxy/config
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;检查是否启动成功：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;netstat -na | grep 8118
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;将 socks5 代理转化成 http 代理：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;http_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'http://localhost:8118'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;https_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'http://localhost:8118'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;如果嫌每次设置麻烦，可以把这两行加在&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bash_profile&lt;/code&gt;下。
不想使用可以通过下面的命令取消：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;unset &lt;/span&gt;http_proxy
&lt;span class=&quot;nb&quot;&gt;unset &lt;/span&gt;https_proxy
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;参考链接：&lt;br /&gt;
&lt;a href=&quot;https://www.zhihu.com/question/31360766/answer/149140490&quot;&gt;Homebrew有比较快的源（mirror）吗？ - skytraveler的回答 - 知乎&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://double-c.github.io/2018/10/17/mac-ss-cmd/index.html&quot;&gt;Mac命令行终端下使用shadowsocks翻墙&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 07 Dec 2019 00:00:00 +0800</pubDate>
        <link>http://www.foolishtalk.org/2019/12/07/pip%E6%8A%98%E8%85%BE%E8%AE%B0/</link>
        <guid isPermaLink="true">http://www.foolishtalk.org/2019/12/07/pip%E6%8A%98%E8%85%BE%E8%AE%B0/</guid>
        
        <category>iOS</category>
        
        <category>Python</category>
        
        
      </item>
    
      <item>
        <title>使用Magellan修改iOS定位</title>
        <description>&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;

&lt;p&gt;最初写的&lt;a href=&quot;https://apps.apple.com/cn/app/%E8%99%9A%E6%8B%9F%E5%AE%9A%E4%BD%8D/id1459663647?mt=12&quot;&gt;虚拟定位&lt;/a&gt;，需要依赖 Xcode 搭配使用，对用户使用造成很大的学习成本，但是由于沙盒机制，在AppStore下载没有办法做到。&lt;/p&gt;

&lt;p&gt;于是，我做了 Magellan，但是要注意，修改定位必须要同时下载&lt;a href=&quot;https://www.foolishtalk.org/magellan/magellan.dmg&quot;&gt;Magellan&lt;/a&gt;以及&lt;a href=&quot;https://apps.apple.com/cn/app/%E8%99%9A%E6%8B%9F%E5%AE%9A%E4%BD%8D/id1459663647?mt=12&quot;&gt;虚拟定位&lt;/a&gt;，不然无法使用。&lt;/p&gt;

&lt;h1 id=&quot;正文&quot;&gt;正文&lt;/h1&gt;

&lt;p&gt;Magellan 的使用方式很简单，下载后，把 App 拖进 应用程序文件夹中，
&lt;img src=&quot;http://images.foolishtalk.org/20191022225610.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
然后双击运行，就可以了。&lt;br /&gt;
有可能会出现这个弹窗，直接打开就好了。&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/20191022105549.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果出现无法打开，因为无法确认开发者的身份的弹窗时，可以在&lt;code class=&quot;highlighter-rouge&quot;&gt;系统偏好设置-通用&lt;/code&gt;下方找到，点击仍要继续运行即可。&lt;/p&gt;

&lt;p&gt;运行成功后，状态栏上方会出现一顶小帽子图标。&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/bc9e8955850855ca07147e65957f8087.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;首先手机要连接电脑，然后选择设备。&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/c81ff0aa45218b3cf8131ad8592eea96.png&quot; alt=&quot;&quot; /&gt;
然后再点击安装驱动：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/d762c75e8c2838d7f7bd7d1afff0c881.png&quot; alt=&quot;&quot; /&gt;
如果出现：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/2019_12_15_8.44.35.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
或者：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/2019_12_15_8.46.55.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;如果是首次安装驱动记得要重新插拔一次手机不然可能会没法识别&quot;&gt;如果是首次安装驱动，记得要重新插拔一次手机，不然可能会没法识别。&lt;/h5&gt;
&lt;p&gt;如果等待超过2分钟没有反应，点击日志，会在桌面上生成一个“虚拟定位日志.txt”，可以通过邮箱zykzzzz@hotmail.com或者&lt;a href=&quot;https://weibo.com/u/2095454814&quot;&gt;微博&lt;/a&gt;联系到我，我会尽快帮你解决问题。&lt;/p&gt;

&lt;p&gt;接下来，打开&lt;a href=&quot;https://apps.apple.com/cn/app/%E8%99%9A%E6%8B%9F%E5%AE%9A%E4%BD%8D/id1459663647?mt=12&quot;&gt;虚拟定位&lt;/a&gt;，把手机连接上电脑。&lt;/p&gt;

&lt;p&gt;改定位的方式有两种：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;勾选键盘模式，双击虚拟定位App上的地图，就会发现手机上的定位已经被修改。
&lt;img src=&quot;http://images.foolishtalk.org/4c15776765db87f361aa9d9f3b17e6fe.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;不需要勾选键盘模式，直接双击地图，在地图上生成多个点，类似这样：
&lt;img src=&quot;http://images.foolishtalk.org/b66ba3623da6f66123bbc4088e9e954e.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;然后输入速度，最后点击&lt;code class=&quot;highlighter-rouge&quot;&gt;路线执行&lt;/code&gt;，你会发现手机正在按照规划的路线在移动。&lt;/p&gt;

&lt;h1 id=&quot;qa&quot;&gt;Q&amp;amp;A&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;显示“暂无可用设备”，找不到自己的设备怎么办？&lt;br /&gt;
先通过 iTunes 检查手机是否连接成功，如果是旧版本的 iTunes 有可能会导致无法检测到设备，iTunes 需要更新到最新版本。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;拿来改定位（玩游戏/打卡）会不会被封？&lt;br /&gt;
不要出现瞬移非常严重的情况，从目前技术手段上无法判定，所以可以放心使用。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;提示“暂不支持 xx 版本，请联系作者升级”，怎么办？&lt;br /&gt;
如果你之前已经安装过驱动了，就不需要管这个提示，依然可以正常使用，如果是从来没有安装过的，出现这个提示，请联系我，我会更新新的版本解决这个问题。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;修改定位是所有App都有用吗？&lt;br /&gt;
修改定位是全局的，整个App都会生效。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;手机需要越狱吗？&lt;br /&gt;
手机不需要越狱。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;支持iPad吗？&lt;br /&gt;
目前不支持，目前考虑到集成iPad驱动太大，所以暂不支持，以后考虑支持。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 04 Dec 2019 00:00:00 +0800</pubDate>
        <link>http://www.foolishtalk.org/2019/12/04/magellan/</link>
        <guid isPermaLink="true">http://www.foolishtalk.org/2019/12/04/magellan/</guid>
        
        <category>iOS</category>
        
        <category>Xcode</category>
        
        
      </item>
    
      <item>
        <title>在Mac app上执行AppleScript</title>
        <description>&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;

&lt;p&gt;前段时间我开发了&lt;a href=&quot;https://itunes.apple.com/cn/app/%E8%99%9A%E6%8B%9F%E5%AE%9A%E4%BD%8D/id1459663647?mt=12&quot;&gt;虚拟定位&lt;/a&gt;，一脚踩进了&lt;code class=&quot;highlighter-rouge&quot;&gt;AppleScript&lt;/code&gt;的坑里无法自拔。&lt;/p&gt;

&lt;h1 id=&quot;applescript&quot;&gt;AppleScript&lt;/h1&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AppleScript&lt;/code&gt;它是什么？&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AppleScript&lt;/code&gt;它是苹果提供在Mac OS上实现自动化的脚本语言，语法相对简单、易懂，类似英语语法。下面这段代码，你可以通过 Mac 自带的脚本编辑器运行：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/apple-script-editor-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;运行后它会打开 iTunes ：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tell application &lt;span class=&quot;s2&quot;&gt;&quot;iTunes&quot;&lt;/span&gt;
	play
end tell
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这三行可以简单的理解为：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;告诉 iTunes
    播放
结束
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tell application &quot;xxx&quot;&lt;/code&gt; 如果你是想让微信 App做点什么，就是&lt;code class=&quot;highlighter-rouge&quot;&gt;tell application &quot;微信&quot;&lt;/code&gt;,而&lt;code class=&quot;highlighter-rouge&quot;&gt;play&lt;/code&gt;这个事件，是iTunes独有的，怎么能知道app特有的事件？你可以通过&lt;code class=&quot;highlighter-rouge&quot;&gt;脚本编辑器&lt;/code&gt;的导航栏中按照以下步骤找到：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/apple-script-editor-2.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
然后选择&lt;code class=&quot;highlighter-rouge&quot;&gt;iTunes&lt;/code&gt;:&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/apple-script-editor-3.png&quot; alt=&quot;&quot; /&gt; &lt;br /&gt;
这里可以看到关于play事件的一些描述。&lt;br /&gt;
在编写Mac app之前，可以先通过脚本编辑器把我们想实现的功能调试好，然后再把脚本移到Mac app上，确保脚本是正确的，而不是因为App沙盒、权限等问题引起。&lt;/p&gt;

&lt;h1 id=&quot;system-events&quot;&gt;System Events&lt;/h1&gt;
&lt;p&gt;上面已经说到，可以通过&lt;code class=&quot;highlighter-rouge&quot;&gt;tell application &quot;xxx&quot;&lt;/code&gt;这种方式去调用 App 允许的行为，如果你看完了上面的介绍，打算自己动手去做一些 App 自动化的事情，你会发现 App 提供的事件很少，甚至有可能没有，所以接下来讲的是 &lt;code class=&quot;highlighter-rouge&quot;&gt;System Events&lt;/code&gt; , &lt;code class=&quot;highlighter-rouge&quot;&gt;System Events&lt;/code&gt; 为我们提供了系统事件，允许我们模拟用户点击行为，可以说所有用户界面相关的操作，你都可以通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;System Events&lt;/code&gt; 去进行自动化操作。&lt;/p&gt;

&lt;p&gt;下面这一段就是通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;System Events&lt;/code&gt; 启动 &lt;code class=&quot;highlighter-rouge&quot;&gt;Safari&lt;/code&gt; 然后通过菜单栏的选项卡，新建标签页。&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tell application &lt;span class=&quot;s2&quot;&gt;&quot;Safari&quot;&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# 打开Safari&lt;/span&gt;
	activate
	tell application &lt;span class=&quot;s2&quot;&gt;&quot;System Events&quot;&lt;/span&gt;
		tell process &lt;span class=&quot;s2&quot;&gt;&quot;Safari&quot;&lt;/span&gt;
			&lt;span class=&quot;c&quot;&gt;# 点击Safari菜单栏-文件-新建标签页&lt;/span&gt;
			click menu item &lt;span class=&quot;s2&quot;&gt;&quot;新建标签页&quot;&lt;/span&gt; of menu 1 of menu bar item &lt;span class=&quot;s2&quot;&gt;&quot;文件&quot;&lt;/span&gt; of menu bar 1
		end tell
	end tell
end tell
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;mac-app-调用-applescript-的方式&quot;&gt;Mac App 调用 AppleScript 的方式&lt;/h1&gt;

&lt;p&gt;通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;NSAppleScript&lt;/code&gt; 运行以下代码：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Swift&quot;&gt;        let source = &quot;&quot;&quot;
tell application &quot;Safari&quot;
    # 打开Safari
    activate
    tell application &quot;System Events&quot;
        tell process &quot;Safari&quot;
            # 点击Safari菜单栏-文件-新建标签页
            click menu item &quot;新建标签页&quot; of menu 1 of menu bar item &quot;文件&quot; of menu bar 1
        end tell
    end tell
end tell
&quot;&quot;&quot;
        let script = NSAppleScript(source: source)!
        var error : NSDictionary?
        script.executeAndReturnError(&amp;amp;error)
        print(error)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;预期结果是正常的，但是会发现打印出了这样的错误：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2019-09-22 21:15:30.094229+0800 SwiftAppleScript[1453:42847] skipped scripting addition &quot;/Library/ScriptingAdditions/SASyphonInjector.osax&quot; because it is not SIP-protected.
Optional({
    NSAppleScriptErrorAppName = &quot;System Events&quot;;
    NSAppleScriptErrorBriefMessage = &quot;Not authorized to send Apple events to System Events.&quot;;
    NSAppleScriptErrorMessage = &quot;Not authorized to send Apple events to System Events.&quot;;
    NSAppleScriptErrorNumber = &quot;-1743&quot;;
    NSAppleScriptErrorRange = &quot;NSRange: {168, 69}&quot;;
})
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这个地方非常的坑，如果没有打印&lt;code class=&quot;highlighter-rouge&quot;&gt;error&lt;/code&gt;,在没有打开&lt;code class=&quot;highlighter-rouge&quot;&gt;App Sanbox&lt;/code&gt;的情况下，是有可能预期效果是正常的，Safari能正常打开然后新建标签页。&lt;/p&gt;

&lt;p&gt;如果之前是做iOS开发的，对这个错误应该会很自然的有头绪，应该就是一些权限问题，直接在Info.plist上就能找到一个看起来是这个权限的字段，&lt;code class=&quot;highlighter-rouge&quot;&gt;Privacy - AppleEvents Sending Usage Description&lt;/code&gt;，把这个字段加上后，重新运行，发现多出了这个弹窗：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/2019-09-28.4.55.09.png&quot; alt=&quot;&quot; /&gt;
如果能够正常运行，那恭喜你，说明你没有打开&lt;code class=&quot;highlighter-rouge&quot;&gt;Capabilities&lt;/code&gt;-&amp;gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;App Sanbox&lt;/code&gt;
&lt;img src=&quot;http://images.foolishtalk.org/2EE70BF91F39368ACF74DD225DEF0EE0.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;为什么要打开app-sanbox&quot;&gt;为什么要打开App Sanbox？&lt;/h1&gt;

&lt;p&gt;Mac OSX在10.6系统之后，为了防止恶意的App通过系统漏洞攻击系统，获取控制权限，要求上架的所有的App，都必须要开启沙盒。不要以为App安全离我们很远，Mac App一不留神就有可能被利用，System Events 就可以做到这个事情。&lt;/p&gt;

&lt;p&gt;讲回正题，当我们把 &lt;code class=&quot;highlighter-rouge&quot;&gt;App Sanbox&lt;/code&gt; 打开后，新的报错又来了：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Optional({
    NSAppleScriptErrorAppName = Safari;
    NSAppleScriptErrorBriefMessage = &quot;Application isn’t running.&quot;;
    NSAppleScriptErrorMessage = &quot;Safari got an error: Application isn’t running.&quot;;
    NSAppleScriptErrorNumber = &quot;-600&quot;;
    NSAppleScriptErrorRange = &quot;NSRange: {45, 8}&quot;;
})
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://images.foolishtalk.org/2019110_IMG_2412.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这次是提示 &lt;code class=&quot;highlighter-rouge&quot;&gt;Safari&lt;/code&gt; 没有运行，我们的代码里已经加了让 &lt;code class=&quot;highlighter-rouge&quot;&gt;Safari&lt;/code&gt; 唤醒的功能了，这说明这段代码没办法执行，既然没有解决，只能靠 google 了。&lt;/p&gt;

&lt;p&gt;在查阅了一大波资料后，在 &lt;code class=&quot;highlighter-rouge&quot;&gt;App.entitlements&lt;/code&gt; 加上这个 &lt;code class=&quot;highlighter-rouge&quot;&gt;com.apple.security.temporary-exception.apple-events&lt;/code&gt; 权限就可以了。&lt;/p&gt;

&lt;p&gt;到这里为止，一切正常的。&lt;br /&gt;
在虚拟定位加入这个权限的第一个版本，上架也非常顺利，但是这之后更新的一个版本，仅涉及一些UI细节的修复，收到苹果拒审的邮件，内容如下：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;我知道你要使用 com.apple.security.temporary-exception.apple-events 干嘛，
但是我不能给你用，要么你就去掉这个功能，要么你要自己找别的方式去实现。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;既然不给我用，为什么上个版本还能给我上架成功？？？&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://images.foolishtalk.org/2019110_IMG_2412.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这个方法不行，只能另外再找方法了。&lt;/p&gt;

&lt;p&gt;从苹果的&lt;a href=&quot;https://developer.apple.com/library/archive/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html#//apple_ref/doc/uid/TP40011195-CH4-SW25&quot;&gt;文档&lt;/a&gt;可以找到怎么通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;AppleScript&lt;/code&gt; 调用其他 App 功能的资料，苹果在文档中给我们举了个例子，如果要用 &lt;code class=&quot;highlighter-rouge&quot;&gt;Mail.app&lt;/code&gt; 的邮件编写功能，可以在 &lt;code class=&quot;highlighter-rouge&quot;&gt;App.entitlements&lt;/code&gt; 加上一下的权限：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;key&amp;gt;com.apple.security.scripting-targets&amp;lt;/key&amp;gt;
    &amp;lt;dict&amp;gt;
        &amp;lt;key&amp;gt;com.apple.mail&amp;lt;/key&amp;gt;
        &amp;lt;array&amp;gt;
            &amp;lt;string&amp;gt;com.apple.mail.compose&amp;lt;/string&amp;gt;
        &amp;lt;/array&amp;gt;
    &amp;lt;/dict&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这样就可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;com.apple.mail.compose&lt;/code&gt;这个访问组下的权限了，这个访问组下的权限，可以通过以下的命令看得到：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sdef /Applications/Mail.app &amp;gt; ~/Desktop/mail.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;但是 Xcode 本身并没有提供一个可以修改定位的访问组权限给到我们，所以并不能使用以上的方法去解决。&lt;/p&gt;

&lt;p&gt;这时候不禁会想到，&lt;code class=&quot;highlighter-rouge&quot;&gt;System Event&lt;/code&gt; 能做什么呢，为什么苹果会不允许我们使用这个权限？对此我又对这个权限有了一个更深入的了解。&lt;/p&gt;

&lt;h1 id=&quot;思考&quot;&gt;思考&lt;/h1&gt;

&lt;p&gt;System Events其实是一个系统App，提供控制Mac OSX GUI和应用之间的交互，在这个路径下你可以找到&lt;code class=&quot;highlighter-rouge&quot;&gt;/System/Library/CoreServices/System Events.app&lt;/code&gt;。 &lt;br /&gt;
通过System Events，我们可以做到以下这些东西：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;获取正在运行的App列表&lt;/li&gt;
  &lt;li&gt;（得到/点击）任意一个正在运行App中的UI元素&lt;/li&gt;
  &lt;li&gt;（打开/移动/删除）文件&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;等等…这不就是等于能远程监控和控制别人的电脑吗？&lt;br /&gt;
所以苹果不开放这个权限也是有原因，既然这样，也只能找别的方法看看了。&lt;br /&gt;
苹果不允许开发者动态调用&lt;code class=&quot;highlighter-rouge&quot;&gt;AppleScript&lt;/code&gt;，但是可以调用 App 沙盒里的 &lt;code class=&quot;highlighter-rouge&quot;&gt;Application Scripts&lt;/code&gt; 目录下的文件。
最终虚拟定位采用的方案也是这个，在&lt;code class=&quot;highlighter-rouge&quot;&gt;Info.plist&lt;/code&gt;加上&lt;code class=&quot;highlighter-rouge&quot;&gt;NSAppleEventsUsageDescription&lt;/code&gt;,并且通过弹窗引导用户把控制Xcode的脚本保存在&lt;code class=&quot;highlighter-rouge&quot;&gt;Application Scripts&lt;/code&gt;目录下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-Swift&quot;&gt;FileManager.default.urls(for: .applicationScriptsDirectory, in: .userDomainMask)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最终，总算顺利上架成功了。&lt;/p&gt;

&lt;h1 id=&quot;总结&quot;&gt;总结&lt;/h1&gt;
&lt;p&gt;App的沙盒机制，给用户带来了安全保障，但是也给开发者带来了很多开发上的困难，同时也一定程度上会增加用户在使用上带来不好的体验。&lt;br /&gt;
如果你也想开发一款App并且上架AppStore，但是要依赖一个不是自己开发的App，大部分非Apple的App，都不会提供AppleScript的相关接口给到第三方使用，把applescript放在&lt;code class=&quot;highlighter-rouge&quot;&gt;Application Scripts&lt;/code&gt;目录下使用是目前唯一能上架成功的方式。&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Nov 2019 00:00:00 +0800</pubDate>
        <link>http://www.foolishtalk.org/2019/11/10/%E5%9C%A8Mac-app%E4%B8%8A%E6%89%A7%E8%A1%8CAppleScript/</link>
        <guid isPermaLink="true">http://www.foolishtalk.org/2019/11/10/%E5%9C%A8Mac-app%E4%B8%8A%E6%89%A7%E8%A1%8CAppleScript/</guid>
        
        <category>Mac</category>
        
        <category>Xcode</category>
        
        
      </item>
    
      <item>
        <title>macOS High Sierra依赖OpenSSL交叉编译</title>
        <description>&lt;p&gt;有些比较老的库，又是依赖 openssl，要自己编译成静态库的时候，遇到了这个错误：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;configure: error: OpenSSL support explicitly requested but OpenSSL could not be found
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;如果打算通过&lt;code class=&quot;highlighter-rouge&quot;&gt;brew link openssl&lt;/code&gt;软连接，会得到这个错误：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Warning: Refusing to link macOS-provided software: openssl
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;后来查阅了一些资料，在 High Sierra 上，openssl 被 禁止通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;brew link openssl&lt;/code&gt; 软链接。&lt;/p&gt;

&lt;p&gt;设置这几个环境变量就可以了：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/opt/openssl/lib:&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CPATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/opt/openssl/include:&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CPATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PKG_CONFIG_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/opt/openssl/lib/pkgconfig:&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PKG_CONFIG_PATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 13 Oct 2019 00:00:00 +0800</pubDate>
        <link>http://www.foolishtalk.org/2019/10/13/macOS-High-Sierra%E4%BE%9D%E8%B5%96OpenSSL%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/</link>
        <guid isPermaLink="true">http://www.foolishtalk.org/2019/10/13/macOS-High-Sierra%E4%BE%9D%E8%B5%96OpenSSL%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/</guid>
        
        <category>Mac</category>
        
        
      </item>
    
      <item>
        <title>iOS模拟移动定位</title>
        <description>&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;在阅读这篇文章之前，先保证你必须符合以下几个条件：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;有台Mac可以使用&lt;/li&gt;
  &lt;li&gt;有一定的编程经验（如果你愿意折腾，没有经验也是可以的）&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;正文&quot;&gt;正文&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.foolishtalk.org/2019/12/04/magellan/&quot;&gt;这里&lt;/a&gt;有个最新的方式，已经不需要用下面的方法了。&lt;/p&gt;

&lt;p&gt;因为有太多人说看不懂了，所以我又录了个&lt;a href=&quot;https://www.bilibili.com/video/av53629147&quot;&gt;视频&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;先打开Mac应用虚拟定位，可以看到以下的界面，可以在这里&lt;a href=&quot;https://itunes.apple.com/cn/app/%E8%99%9A%E6%8B%9F%E5%AE%9A%E4%BD%8D/id1459663647?mt=12&quot;&gt;下载&lt;/a&gt;，另外有什么App使用上的问题和建议，也可以来&lt;a href=&quot;https://weibo.com/p/1005052095454814&quot;&gt;微博&lt;/a&gt;私信我：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://images.foolishtalk.org/mock_location_12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;双击选择你要定位的位置点；&lt;/li&gt;
  &lt;li&gt;在左上角填速度，每个点之间移动的速度会根据这个速度移动；&lt;/li&gt;
  &lt;li&gt;右上角保存会生成出一个gpx文件；&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;先用Xcode新建一个工程，按照以下步骤操作，Xcode可以在App Store&lt;a href=&quot;https://itunes.apple.com/cn/app/xcode/id497799835?mt=12&quot;&gt;下载&lt;/a&gt;：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://images.foolishtalk.org/mock_location_2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;选择创建iOS App：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/mock_location_3.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;输入工程名，&lt;code class=&quot;highlighter-rouge&quot;&gt;Organization Name&lt;/code&gt;随便填就可以了，&lt;code class=&quot;highlighter-rouge&quot;&gt;Organization Identifier&lt;/code&gt;填”com.xxx.xxx”，xxx替换成任意英文即可：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/mock_location_4.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;按照以下步骤，选择工程，然后添加账号，这里填你苹果账号：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/mock_location_5.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;把手机连到Mac上，然后选中你的手机，如果没有看到你的手机，可以打开iTunes看看手机是否有连接，如果也没有，拔掉线重新连，应该会看到iTunes有个弹窗，点击信任此电脑，手机上也需要点击信任此电脑：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/mock_location_8.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;输入你手机iOS系统的版本，这里代表可以运行的最低版本，例如你是iOS 10.2，输入10就可以了：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/mock_location_11.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;下载&lt;a href=&quot;https://itunes.apple.com/cn/app/%E8%99%9A%E6%8B%9F%E5%AE%9A%E4%BD%8D/id1459663647?mt=12&quot;&gt;虚拟定位&lt;/a&gt;，然后按照你想模拟的路径双击地图，按保存会生成一个GPX文件，把生成的GPX文件拖进去工程目录中：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/mock_location_6.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/mock_location_7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;点击运行，首次运行可能会弹出需要信任证书的提示，这时候点击手机的设置-通用-描述文件与设备管理-「找到自己的开发证书」-点击信任，再重新运行一遍：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/mock_location_9.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;选中你拖进去gpx文件名字的选项：&lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/mock_location_10.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;这时候你会发现定位已经改变了，但是要注意，这时候手机和Mac是不能断开连接的，以及运行的App不能被杀死，否则定位修改都会失败。&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 11 Apr 2019 00:00:00 +0800</pubDate>
        <link>http://www.foolishtalk.org/2019/04/11/mocklocation/</link>
        <guid isPermaLink="true">http://www.foolishtalk.org/2019/04/11/mocklocation/</guid>
        
        <category>iOS</category>
        
        <category>Xcode</category>
        
        
      </item>
    
      <item>
        <title>音视频学习笔记</title>
        <description>&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;

&lt;p&gt;虽然2019年已经不是音视频的风口，但是不可否认在iOS开发中，依旧属于一个很火的领域，由于一直没有机会进入到一间由音视频技术驱动的公司，所以对音视频这块的学习没有很深入的学习，上年年底的时候，决心要做出点改变，所以有了这篇。&lt;br /&gt;
原来这篇只是作为一个自己的学习笔记，并没有打算作为文章发出来，后来大体将音视频最基础的点都记录后，想到作为一个入门小白级的文章，或许是个不错的选择。不过也因为最初的原因，参考了不少网上前辈的文章，但是没有记录下参考链接，如果有发现相似的内容，请在评论区下留下链接，定会在文末补上参考链接。&lt;/p&gt;

&lt;h1 id=&quot;直播&quot;&gt;直播&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/26038990/answer/130557483&quot;&gt;视频直播中说的抓流和推流，是什么意思，两种有什么区别？ - 刘博的回答 - 知乎&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;推流，指的是把采集阶段封包好的内容传输到服务器的过程。&lt;br /&gt;
拉流是指服务器已有直播内容，用指定地址进行拉取的过程。&lt;/p&gt;

&lt;p&gt;介绍一下目前有主流的推送协议，以及各自的优缺点。&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;RTMP&lt;br /&gt;
RTMP协议中，视频必须是H264编码，音频必须是AAC或MP3编码，且多以flv格式封包。RTMP是目前最主流的流媒体传输协议，对CDN支持良好，实现难度较低，是大多数的直播平台的选择。&lt;br /&gt;
不过RTMP有着一个最大的不足——不支持浏览器，且Adobe已不再更新。因此直播服务要支持浏览器的话，需要另外的推送协议支持。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;HLS&lt;br /&gt;
Http Live Streaming是由Apple公司定义的基于HTTP的流媒体实时传输协议。它的原理是将整个流分为多个小的文件来下载，每次只下载若干个。服务器端会将最新的直播数据生成新的小文件，客户端只要不停的按顺序播放从服务器获取到的文件，就实现了直播。基本上，HLS是以点播的技术实现了直播的体验。因为每个小文件的时长很短，客户端可以很快地切换码率，以适应不同带宽条件下的播放。&lt;br /&gt;
分段推送的技术特点，决定了HLS的延迟一般会高于普通的流媒体直播协议。&lt;br /&gt;
传输内容包括两部分：一是M3U8描述文件，二是TS媒体文件。TS媒体文件中的视频必须是H264编码，音频必须是AAC或MP3编码。&lt;br /&gt;
由于数据通过HTTP协议传输，所以完全不用考虑防火墙或者代理的问题，而且分段文件的时长很短。&lt;/li&gt;
  &lt;li&gt;WebRTC&lt;br /&gt;
WebRTC（Web Real-Time Communication），即“源自网页即时通信”。WebRTC是一个支持浏览器进行实时语音、视频对话的开源协议。WebRTC的支持者甚多，Google、Mozilla、Opera推动其成为W3C推荐标准。WebRTC支持目前的主流浏览器，并且基于SRTP和UDP，即便在网络信号一般的情况下也具备较好的稳定性。此外，WebRTC可以实现点对点通信，通信双方延时低，是实现“连麦”功能比较好的选择。&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;rtmp和hls对比&quot;&gt;RTMP和HLS对比&lt;/h1&gt;

&lt;p&gt;· RTMP 首先就是延迟低，基于TCP的长链接，对于数据处理及时，收到即刻发送，推荐使用场景：即时互动。&lt;br /&gt;
· HLS 延迟高，短链接，原理是集合了一段时间的视频数据，切割ts片，逐个下载播放。优点是跨平台。&lt;/p&gt;

&lt;h1 id=&quot;编码和解码&quot;&gt;编码和解码&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;为什么要编码和解码？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;先上数据：&lt;br /&gt;
一张1280 * 720 的RGBA图像大小等于：1280 * 720 * 4 = 3.516MB&lt;br /&gt;
一张1280 * 720 的YUV图像大小等于：1280 * 720 * 1 + 1280 *720 * 0.5 = 1.318MB&lt;br /&gt;
假设fps为24，一般电影长度90分钟大小等于： 1.318MB * 24fps * 90min * 60s = 166.8GB&lt;br /&gt;
这么大是不行的，所以需要视频编码。&lt;/p&gt;

&lt;p&gt;采集的原始音视频信号体积都非常大。里面有很多相同的、眼看不到的、耳听不到的内容。为了减小体积便于存储、传输、交流，就有了压缩无用信息和不重要的信息的“压缩处理”，这就叫“编码”。&lt;br /&gt;
压缩（编码）过的内容无法直接使用，使用（观看）时必须解压缩，还原为原始的信号（比如视频中某个点的颜色等），这就是“解码“或者”解压缩“&lt;/p&gt;

&lt;p&gt;软编解码：使用CPU进行编解码，大多使用FFmpeg来编码和解压音视频数据；&lt;br /&gt;
硬编解码：主要使用非CPU进行编解码，如GPU等。在使用中，大多直接调用系统API进行音视频编解码处理。使用VideoToolbox中的VTCompressionSessionRef实现&lt;/p&gt;

&lt;h1 id=&quot;cmsamplebufferref&quot;&gt;CMSampleBufferRef&lt;/h1&gt;

&lt;p&gt;系统的音视频输出类会回调&lt;code class=&quot;highlighter-rouge&quot;&gt;CMSampleBufferRef&lt;/code&gt;，我们可以通过这个获取视频帧或者音频帧。&lt;br /&gt;
代表视频的CMSampleBufferRef中保存的数据是yuv420格式的视频帧。（可以在设备输出初始化修改格式）&lt;br /&gt;
代表音频的CMSampleBufferRef中保存的数据是PCM格式的音频帧。&lt;br /&gt;
yuv是一种图片储存格式，跟RGB格式类似。yuv中，y表示亮度，单独只有y数据就可以形成一张图片，只不过这张图片是灰色的。u和v表示色差(u和v也被称为：Cb－蓝色差，Cr－红色差)&lt;/p&gt;

&lt;h1 id=&quot;flv&quot;&gt;FLV&lt;/h1&gt;

&lt;p&gt;flv是一种简单的视频合成格式。它支持指定的音视频格式，如：h263，h264，VP6 及 AAC，MP3，Nellymoser等。  &lt;br /&gt;
flv刚好支持 h264 和 aac。&lt;br /&gt;
rtmp协议所传输的视频流，就要求是flv格式。&lt;/p&gt;

&lt;h1 id=&quot;视频数据采集原理推流&quot;&gt;视频数据采集原理(推流)&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;音视频的采集，iOS 中，利用 AVCaptureSession和AVCaptureDevice 可以采集到原始的音视频数据流。一般采集原始格式为YUV，因为前面也有提到了，YUV体积比较小。
    &lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AVCaptureSession&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;c1&quot;&gt;// 1. 创建`AVCaptureSession`用来管理音视频输入、输出，`setSessionPreset:`可以设置视频分辨率；
&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;_session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AVCaptureSession&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_session&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setSessionPreset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AVCaptureSessionPreset640x480&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    &lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setupVideoCapture&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//  2. 通过`AVCaptureDevice`拿到物理设备，再初始化`AVCaptureDeviceInput`输出对象；
&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AVCaptureDevice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AVCaptureDevice&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;defaultDeviceWithMediaType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AVMediaTypeVideo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;NSError&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;AVCaptureDeviceInput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deviceInput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AVCaptureDeviceInput&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;deviceInputWithDevice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;// 3. 将其设备输出对象`AVCaptureDeviceInput`添加到`AVCaptureSession`的输入中
&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;canAddInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deviceInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deviceInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;// 4. 创建输出对象
&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AVCaptureVideoDataOutput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;videoDataOutput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AVCaptureVideoDataOutput&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;// 5. 设置输出格式，iOS下目前仅支持这3种
&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/*
  kCVPixelFormatType_420YpCbCr8BiPlanarVideoRange YUV格式，Y值取值范围[16,235]
  kCVPixelFormatType_420YpCbCr8BiPlanarFullRange  YUV格式，Y值取值范围[0,255]
  kCVPixelFormatType_32BGRA                       BGBA格式
  */&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;NSDictionary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rgbOutputSettings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;@{(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kCVPixelBufferPixelFormatTypeKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kCVPixelFormatType_32BGRA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)};&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;videoDataOutput&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setVideoSettings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rgbOutputSettings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;// 6. 放弃因为阻塞而延迟的视频帧
&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;videoDataOutput&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setAlwaysDiscardsLateVideoFrames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;YES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;// 7. 创建一个串行队列，保证输出帧是按顺序返回的
&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dispatch_queue_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;videoDataOutputQueue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dispatch_queue_create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;VideoDataOutputQueue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DISPATCH_QUEUE_SERIAL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;videoDataOutput&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setSampleBufferDelegate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;videoDataOutputQueue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    
 &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;canAddOutput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;videoDataOutput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addOutput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;videoDataOutput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;videoConnection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;videoDataOutput&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;connectionWithMediaType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AVMediaTypeVideo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;对视频进行 H264 编码，对音频进行 AAC 编码，在 ios 中分别有已经封装好的编码库来实现对音视频的编码。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;对编码后的音、视频数据进行组装封包；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;建立 RTMP 连接并上推到服务端。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://images.foolishtalk.org/20190305172841.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;graph LR
   硬件采集 --&amp;gt; 音频数据流;
   硬件采集 --&amp;gt; 视频数据流;
   音频数据流 --&amp;gt; AAC编码;
   视频数据流 --&amp;gt; H264编码;
   AAC编码 --&amp;gt; 组装封包;
   H264编码 --&amp;gt; 组装封包; 
   组装封包 --&amp;gt; RTMP连接推上服务器;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;视频播放原理拉流&quot;&gt;视频播放原理(拉流)&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;http://images.foolishtalk.org/20190305172857.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;graph LR
   数据 --&amp;gt; 解协议;
   解协议 --&amp;gt; 封装格式数据;
   封装格式数据 --&amp;gt; 解封装;
   解封装 --&amp;gt; 音频压缩数据;
   音频压缩数据 --&amp;gt; 音频解码;
   音频解码 --&amp;gt; 音频原始数据;
   音频原始数据 --&amp;gt; 音视频同步;
   解封装 --&amp;gt; 视频压缩数据;
   视频压缩数据 --&amp;gt; 视频解码;
   视频解码 --&amp;gt; 视频原始数据;
   视频原始数据 --&amp;gt; 音视频同步;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解封装的作用，就是将输入的封装格式的数据，分离成为音频流压缩编码数据和视频流压缩编码数据。封装格式种类很多，例如MP4，MKV，RMVB，TS，FLV，AVI等等，它的作用就是将已经压缩编码的视频数据和音频数据按照一定的格式放到一起。例如，FLV格式的数据，经过解封装操作后，输出H.264编码的视频码流和AAC编码的音频码流。&lt;/p&gt;

&lt;p&gt;解码的作用，就是将视频/音频压缩编码数据，解码成为非压缩的视频/音频原始数据。音频的压缩编码标准包含AAC，MP3，AC-3等等，视频的压缩编码标准则包含H.264，MPEG2，VC-1等等。解码是整个系统中最重要也是最复杂的一个环节。通过解码，压缩编码的视频数据输出成为非压缩的颜色数据，例如YUV420P，RGB等等；压缩编码的音频数据输出成为非压缩的音频抽样数据，例如PCM数据。
视音频同步的作用，就是根据解封装模块处理过程中获取到的参数信息，同步解码出来的视频和音频数据，并将视频音频数据送至系统的显卡和声卡播放出来。&lt;/p&gt;

&lt;p&gt;为什么要分封装格式和视频编码格式呢？ 这个其实跟网络分七层模型一个原理。解耦和，降低依赖，底层给上层提供基础功能，底层和上层都都可以单独扩展，可以以多种方案组合编码与封装，比如MP4与H264、MP4与MPEG、TS与H264等等。比如这里面的这边文章的编码就只负责将最原始的音频和视频数据就行压缩，而压缩完的数据要怎么组织就拜托给上层的封装，封装接到视频音频数据负责给数据编号，指定同步协议，加入字幕等操作。经过封装后，得到的就是可以播放的上面提到的视频文件MP4或者MKV等等。把这个过程反过来就是上图描述的视频播放的过程。&lt;/p&gt;

&lt;h1 id=&quot;优化&quot;&gt;优化&lt;/h1&gt;

&lt;h2 id=&quot;播放卡顿&quot;&gt;播放卡顿&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;造成卡顿的原因有几种情况&lt;/p&gt;
  &lt;ol&gt;
    &lt;li&gt;推流端网络抖动导致数据无法发送到服务器，造成播放端卡顿;&lt;/li&gt;
    &lt;li&gt;播放端网络抖动导致数据累积在服务器上拉不下来，造成播放卡顿。&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;弹幕优化&quot;&gt;弹幕优化&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;弹幕阴影通过&lt;code class=&quot;highlighter-rouge&quot;&gt;NSAttributeString&lt;/code&gt;的&lt;code class=&quot;highlighter-rouge&quot;&gt;NSStrokeColorAttributeName&lt;/code&gt;属性设置文字的轮廓颜色替换文字阴影。&lt;/li&gt;
  &lt;li&gt;用CALayer替代UIView展示。&lt;/li&gt;
  &lt;li&gt;将内容合成一张图片展现。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;优化切换前后台带来的累积延时&quot;&gt;优化切换前后台带来的累积延时&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;第一种方案是播放器采用视频同步音频的策略，然后退到后台时保持音频继续播放（在 iOS 平台需要开启 App 的 Background Audio 能力来配合）。这样可以保持音频一直播放不产生延时，而当回到前台时，视频同步音频直接切换到最新时间戳即可。笔者发现斗鱼也是使用了这个机制。&lt;/li&gt;
  &lt;li&gt;第二种方案是回到前台时重新刷新直播，重连直播流，这样即可消灭累积延时。但是这种方案的问题是重连直播流的过程需要一定的时间，这样回到前台时会有卡顿，或者出现黑屏，尤其是当你的首屏加载优化不够时，这个卡顿或黑屏时间会较长。所以这种方案在你的首屏加载优化的比较好的情况下可以采用。此外，你可以退到后台时截取视频当前帧贴图到直播间上，从而当切回前台时，防止黑屏，优化体验，实践效果还是不错的。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;音视频同步&quot;&gt;音视频同步&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://techblog.toutiao.com/2018/05/29/untitled-20/&quot;&gt;参考&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 05 Mar 2019 00:00:00 +0800</pubDate>
        <link>http://www.foolishtalk.org/2019/03/05/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
        <guid isPermaLink="true">http://www.foolishtalk.org/2019/03/05/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
        
        <category>iOS</category>
        
        <category>音视频</category>
        
        
      </item>
    
  </channel>
</rss>

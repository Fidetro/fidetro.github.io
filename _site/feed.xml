<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FoolishTalk</title>
    <description></description>
    <link>http://www.foolishtalk.org/</link>
    <atom:link href="http://www.foolishtalk.org/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 09 Mar 2022 23:06:54 +0800</pubDate>
    <lastBuildDate>Wed, 09 Mar 2022 23:06:54 +0800</lastBuildDate>
    <generator>Jekyll v4.2.1</generator>
    
      <item>
        <title></title>
        <description>&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;随着自己开发的个人项目越来越多，也给自己制定了一些git的规范，例如&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git commit&lt;/code&gt;提交日志的规范。&lt;br /&gt;
因为我的个人项目都是放在GitHub上，我在给项目开发新需求的时候，会新建一个issue，GitHub会给这个issue，创建一个&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#id&lt;/code&gt;(不知道正确叫法是什么)，然后在开发新需求的时候，会把分支名称改成&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#id&lt;/code&gt;，这样就可以方便的跟踪项目后续问题回溯，同时还会在提交日志加上&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#id&lt;/code&gt;，类似这样的格式：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#id-问题/功能描述
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;这样的格式，可以在GitHub的页面直接跳转到对应的issue或者pull request，非常方便。&lt;br /&gt;
但是每次都得手动加上&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#id-&lt;/code&gt;，这样会比较麻烦，所以我想到了用git-hooks，在提交日志的时候，自动加上&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#id-&lt;/code&gt;，这样就可以让我们不用手动加上&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#id-&lt;/code&gt;了。&lt;/p&gt;

&lt;h1 id=&quot;正文&quot;&gt;正文&lt;/h1&gt;
&lt;p&gt;关于git-hooks，我就不多说了，可以看看这里对git-hooks的&lt;a href=&quot;https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90&quot;&gt;介绍&lt;/a&gt;,如果只想把hook的规则单独使用在某个项目中，可以在项目的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.git/hooks&lt;/code&gt;下创建hook脚本。&lt;br /&gt;
如果想要在全局使用，有两种方式&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;init.templatedir&lt;/code&gt;或者&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;core.hooksPath&lt;/code&gt;。&lt;/p&gt;

&lt;h2 id=&quot;inittemplatedir&quot;&gt;init.templatedir&lt;/h2&gt;
&lt;p&gt;这种方式会在你的项目&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git init&lt;/code&gt;的时候，自动创建一个hooks文件夹，然后把所有的hook脚本都放在这个文件夹下，如果是旧的项目就需要再次执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git init&lt;/code&gt;才会生效。&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#创建hooks文件夹
mkdir -p ~/.git-templates/hooks
#配置全局git templates
git config --global init.templatedir &apos;~/.git-templates&apos;  
#确保脚本可以执行
chmod a+x ~/.git-hooksPath/hooks/xxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;将hook的脚本放入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.git-templates/hooks&lt;/code&gt;中即可。&lt;/p&gt;

&lt;h2 id=&quot;corehookspath&quot;&gt;core.hooksPath&lt;/h2&gt;
&lt;p&gt;这种方式需要git的版本在2.9+以上才能正常使用，比第一种方式方便在旧项目不需要再次init就可以使用。&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#创建hooks文件夹
mkdir -p ~/.git-hooksPath/hooks
#配置全局git hooksPath
git config --global core.hooksPath ~/.git-hooksPath/hooks  
#确保脚本可以执行
chmod a+x ~/.git-hooksPath/hooks/xxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;将hook的脚本放入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.git-hooksPath/hooks&lt;/code&gt;中即可。&lt;/p&gt;

&lt;p&gt;如果有个别项目不需要使用全局的git hooks，可以在项目的根目录下重新配置git hooksPath，比如：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config core.hooksPath .git/hooks 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;参考&quot;&gt;参考&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2293498/applying-a-git-post-commit-hook-to-all-current-and-future-repositories&quot;&gt;Applying a git post-commit hook to all current and future repositories&lt;/a&gt; &lt;br /&gt;
&lt;a href=&quot;https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90&quot;&gt;Git 钩子&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Mar 2022 00:00:00 +0800</pubDate>
        <link>http://www.foolishtalk.org/2022/03/09/%E5%85%A8%E5%B1%80git-hook%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</link>
        <guid isPermaLink="true">http://www.foolishtalk.org/2022/03/09/%E5%85%A8%E5%B1%80git-hook%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</guid>
        
        <category>git</category>
        
        
      </item>
    
      <item>
        <title>Installing Lightning for Xcode</title>
        <description>&lt;p&gt;To install Lightning - Generate for Xcode in Xcode 12 (or Xcode 11):&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Quit Xcode&lt;/li&gt;
  &lt;li&gt;Enable Lightning extension in System Preferences -&amp;gt; Extensions -&amp;gt; Xcode Source Editor&lt;br /&gt;
 &lt;img src=&quot;http://images.foolishtalk.org/C54AFAC1-558F-4682-AF83-C7AC04E89E75.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
 &lt;img src=&quot;http://images.foolishtalk.org/E1AA6956-0246-4377-B085-DA45E9FAF733.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Restart Xcode&lt;/li&gt;
  &lt;li&gt;Select the code you want to extracting&lt;/li&gt;
  &lt;li&gt;Use Editor -&amp;gt; Lightning menu to extracting method declarations&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;command+v&lt;/code&gt; Paste method declarations to header file,now!&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;tips&quot;&gt;Tips&lt;/h1&gt;
&lt;p&gt;You can set a shortcut (Key Binding) for any command via Xcode -&amp;gt; Preferences -&amp;gt; Key Bindings. &lt;br /&gt;
&lt;img src=&quot;http://images.foolishtalk.org/D7233F8D-4E03-4B53-8A14-8B402BF4051A.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If there are any questions, please feel free to contact me and send email to zykzzzz@hotmail.com.&lt;/p&gt;
</description>
        <pubDate>Mon, 21 Feb 2022 00:00:00 +0800</pubDate>
        <link>http://www.foolishtalk.org/2022/02/21/lightning/</link>
        <guid isPermaLink="true">http://www.foolishtalk.org/2022/02/21/lightning/</guid>
        
        <category>Lightning</category>
        
        
      </item>
    
      <item>
        <title>WWDC-2018笔记---使用Signposts分析App性能</title>
        <description>&lt;h1 id=&quot;正文&quot;&gt;正文&lt;/h1&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Signposts&lt;/code&gt; 可以针对某段代码块进行性能分析，并且能在Instrument中显示,并且允许我们标记一段开始和结束，然后将这两点时间发生的事情与日志关联起来。
&lt;img src=&quot;https://www.foolishtalk.org/cloud/8E243DC9-80EC-4729-A537-262254E0A542.png&quot; alt=&quot;&quot; /&gt;
代码如下：&lt;/p&gt;
&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signpost&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;refreshLog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;OSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;subsystem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;com.example.your-app&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;RefreshOperations&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//标记单独获取所有图片的开始&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;os_signpost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refreshLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Refresh Panel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;panel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elements&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//标记单独获取一次图片的开始&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;os_signpost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refreshLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Fetch Asset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//获取图片&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;fetchAsset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;os_signpost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refreshLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Fetch Asset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;os_signpost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refreshLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Refresh Panel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;同一个方法有可能被多次调用，在 Instrument 上会出现重叠的情况，如果我们希望区分是否是不同的对象调用，可以通过 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Signpost IDs&lt;/code&gt; 实现。&lt;/p&gt;
&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;spid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;OSSignpostID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refreshLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;os_signpost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refreshLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Fetch Asset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;signpostID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;os_signpost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refreshLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Fetch Asset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;signpostID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;如果调用的对象本身具有唯一性，还可以用对象作为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Signpost IDs&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;spid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;OSSignpostID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refreshLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;os_signpost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refreshLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Fetch Asset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;signpostID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;os_signpost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refreshLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Fetch Asset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;signpostID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;os_signpost()&lt;/code&gt;还允许我们在使用的时候通过格式化字符串的方式增加元数据。&lt;/p&gt;
&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;os_signpost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Compute Physics&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&quot;for %{public}s at (%d, %.1f) with mass %.2f and velocity (%.1f, %.1f)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;更有利于我们后续分析和发现追踪特定场景下的问题，这里还要提到一点，对于字符串格式化，这里使用的了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%{public}s&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;description&lt;/code&gt;如果是静态常量的字符串时，可以使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%s&lt;/code&gt;，但是需要格式化动态拼接的字符串
时，需要使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%{public}s&lt;/code&gt;，为了保护用户的隐私，苹果建议日志都使用静态字符串和数字组成。 &lt;br /&gt;
还有个小Tips，想让数据在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Instrument&lt;/code&gt;上以内存大小的单位格式化，可以使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%{xcode:size-in-bytes}llu&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;苹果在WWDC上声称signpost进行了启动上优化，并且通过编译器的优化，使得它是在编译时运行而不是运行时，并且将很多工作都交给了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Instrument&lt;/code&gt;,使得&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;signpost&lt;/code&gt;在发送的时候只会占用非常少的系统资源。但是你依然有可能想停止&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;signpost&lt;/code&gt;的使用。如果想在代码中停止某个&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;signpost&lt;/code&gt;的使用，可以通过改变OSLog的初始化实现：&lt;/p&gt;
&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;refreshLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;OSLog&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ProcessInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;processInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SIGNPOSTS_FOR_REFRESH&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;refreshLog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;OSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;subsystem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;com.example.your-app&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;RefreshOperations&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;refreshLog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;disabled&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//标记为不使用&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;os_signpost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refreshLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Refresh Panel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;panel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elements&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;os_signpost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refreshLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Fetch Asset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;fetchAsset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;os_signpost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refreshLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Fetch Asset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;os_signpost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refreshLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Refresh Panel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;signpost&lt;/code&gt;不仅支持Swift，同时也支持C、OC，API可以参考下图。&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/7548FA58-3851-4DFE-A885-0FD67F3EBFA3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;signpost&lt;/code&gt;如何使用这里就不展开说了，非常简单，在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Instrument&lt;/code&gt;添加&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;os_signpost&lt;/code&gt;的选项卡就可以使用。
&lt;img src=&quot;https://www.foolishtalk.org/cloud/2021-05-03-12-34-02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;参考&quot;&gt;参考&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2018/405/&quot;&gt;Measuring Performance Using Logging&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/a/39840862/6202715&quot;&gt;Why the Xcode 8 (iOS 10) print LogMessageLogging in console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2016/721/&quot;&gt;Unified Logging and Activity Tracing&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 03 May 2021 00:00:00 +0800</pubDate>
        <link>http://www.foolishtalk.org/2021/05/03/WWDC-2018%E7%AC%94%E8%AE%B0-%E4%BD%BF%E7%94%A8Signposts%E5%88%86%E6%9E%90App%E6%80%A7%E8%83%BD/</link>
        <guid isPermaLink="true">http://www.foolishtalk.org/2021/05/03/WWDC-2018%E7%AC%94%E8%AE%B0-%E4%BD%BF%E7%94%A8Signposts%E5%88%86%E6%9E%90App%E6%80%A7%E8%83%BD/</guid>
        
        <category>WWDC</category>
        
        <category>Instrument</category>
        
        <category>性能分析</category>
        
        
      </item>
    
      <item>
        <title>解决博客在Chrome里http和https混合使用的问题</title>
        <description>&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;今天突然发现博客的图片都无法加载了，打开浏览器控制台一看，发现是无法找到https资源报错了：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Mixed Content: The page at &apos;&amp;lt;URL&amp;gt;&apos; was loaded over HTTPS, but requested an insecure font &apos;&amp;lt;URL&amp;gt;&apos;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;原来是因为更新了Chrome后，如果网站是https，会把非https的资源强制转成了http，我博客用的七牛云，使用https流量是要另外收费的，所以只好找个方法曲线救国。&lt;/p&gt;

&lt;h1 id=&quot;解决&quot;&gt;解决&lt;/h1&gt;
&lt;p&gt;通过nginx反向到七牛云的域名，原本请求http://images.foolishtalk.org/xxx.png，改成请求https://www.foolishtalk.org/cloud/xxx.png&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   #反向代理，解决七牛云的图片在谷歌浏览器会自动把https转成http的问题
   location /cloud/ {
      proxy_pass http://images.foolishtalk.org/;
   }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 07 Oct 2020 00:00:00 +0800</pubDate>
        <link>http://www.foolishtalk.org/2020/10/07/%E8%A7%A3%E5%86%B3%E5%8D%9A%E5%AE%A2%E5%9C%A8Chrome%E9%87%8Chttp%E5%92%8Chttps%E6%B7%B7%E5%90%88%E4%BD%BF%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98/</link>
        <guid isPermaLink="true">http://www.foolishtalk.org/2020/10/07/%E8%A7%A3%E5%86%B3%E5%8D%9A%E5%AE%A2%E5%9C%A8Chrome%E9%87%8Chttp%E5%92%8Chttps%E6%B7%B7%E5%90%88%E4%BD%BF%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
        
        <category>Chrome</category>
        
        <category>Nginx</category>
        
        
      </item>
    
      <item>
        <title>Mac App公证</title>
        <description>&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;

&lt;p&gt;从非Mac AppStore的地方下载的App，大家应该都有遇到过这样的提示：&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/IMG_4487.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;遇到这种情况，可以在终端输入，将&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;安全性与隐私-通用-任何来源&lt;/code&gt;开启，这样就可以解决了：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;spctl &lt;span class=&quot;nt&quot;&gt;--master-disable&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://www.foolishtalk.org/cloud/b763e24905260962b5f85903f86472d5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但是作为一个普通用户，会认为你的App不安全，我开发的虚拟定位因为需要依赖非沙盒环境下的Magellan，也遇到这个问题，也有国外用户因为觉得这个行为是有风险，在AppStore给了个差评。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.foolishtalk.org/cloud/9d72a50bedcd69db68dbe4777d16b83f.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;从设置上看，用户是可以通过选择&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;App Store和被认可的开发者&lt;/code&gt;下载非App Store来源的应用的，问题是怎样才能成为被认可的开发者呢？&lt;/p&gt;

&lt;h1 id=&quot;正文&quot;&gt;正文&lt;/h1&gt;

&lt;p&gt;Mac上通过&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gatekeeper&lt;/code&gt;的技术来确保用户运行的是自己信任的App,在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;App Store&lt;/code&gt;上架之前应用是经过&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Apple&lt;/code&gt;签名的，通过这种方式保证App没有被修改。&lt;/p&gt;

&lt;p&gt;而从第三方网站或软件中下载的App，则需要提交应用给Apple进行公证，公证结束后再对其签名，用户下载的时候弹窗就会变成这样：&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/IMG_4488.PNG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;公证的方式有两种，一种是通过Xcode Archives后在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Organizer&lt;/code&gt;进行操作，另一种方式是通过脚本自定义workflow。&lt;/p&gt;

&lt;h2 id=&quot;xcode&quot;&gt;Xcode&lt;/h2&gt;
&lt;p&gt;通过 Xcode导航栏上方 「Product」-&amp;gt;「Archives」,选择「Distribute App」-&amp;gt; 「Developer ID」-&amp;gt; 「Upload」&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/4408719a68ebdffd9d939200a4458fd9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上传完成后，等苹果回复认证通过的邮件后，再次选择「Distribute App」-&amp;gt; 「Developer ID」-&amp;gt; 「Export」，这时候导出的包就是已经被苹果公证过的了。&lt;br /&gt;
苹果公证邮件回复的很快，官方文档提到一般一小时内会回复，我一般5-10分钟就会收到了。&lt;/p&gt;

&lt;h2 id=&quot;workflow&quot;&gt;Workflow&lt;/h2&gt;
&lt;p&gt;我自己用的是脚本打包，因为mac上打包主要以dmg的形式为主，另外dSYM也需要上传到App Center上，自定义workflow更适合我。&lt;/p&gt;

&lt;p&gt;先用Xcode打包的方式执行一次，将导出后文件夹中的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ExportOptions.plist&lt;/code&gt;复制到工程目录下，即&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$SRCROOT/ExportOptions.plist&lt;/code&gt;下，等下会用到。&lt;/p&gt;

&lt;p&gt;新建个构建脚本文件，放工程目录下：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#App名字&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;PRODUCT_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;xxx
&lt;span class=&quot;nv&quot;&gt;CONFIGURATION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Release
&lt;span class=&quot;c&quot;&gt;#SCHEME名字&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;BUILD_SCHEME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;xxx

&lt;span class=&quot;nv&quot;&gt;CLEAN_COMMAND&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;xcodebuild -workspace &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PRODUCT_NAME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.xcworkspace -scheme &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;BUILD_SCHEME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -configuration &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CONFIGURATION&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -sdk macosx&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;BUILD_COMMAND&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;xcodebuild archive -workspace &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PRODUCT_NAME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.xcworkspace -scheme &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;BUILD_SCHEME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -configuration &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CONFIGURATION&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -sdk macosx -archivePath &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PRODUCT_NAME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.xcarchive&quot;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$CLEAN_COMMAND&lt;/span&gt; clean
&lt;span class=&quot;nv&quot;&gt;$BUILD_COMMAND&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;苹果不建议我们使用明文的密码，通过下面的命令，将密码放进钥匙串：&lt;br /&gt;
Xcode 13之后:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#这里的WWDRTeamID，其实是你的开发者账号的team id，可以通过https://developer.apple.com/account 「Membership」查看&lt;/span&gt;
xcrun notarytool store-credentials &lt;span class=&quot;s2&quot;&gt;&quot;AC_PASSWORD&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--apple-id&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;开发者账号邮箱&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--team-id&lt;/span&gt; &amp;lt;WWDRTeamID&amp;gt; &lt;span class=&quot;nt&quot;&gt;--password&lt;/span&gt; &amp;lt;secret_2FA_password&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Xcode 13之前:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcrun altool &lt;span class=&quot;nt&quot;&gt;--store-password-in-keychain-item&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AC_PASSWORD&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;开发者账号邮箱&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;apple id专用密码&quot;&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;不知道什么是专用密码的，可以看&lt;a href=&quot;https://support.apple.com/zh-cn/HT204397&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;将下面的脚本调整后，放入Post-actions中&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/7d1045b183241672996953e235bec078.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcodebuild &lt;span class=&quot;nt&quot;&gt;-exportArchive&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-archivePath&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ARCHIVE_PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-exportOptionsPlist&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SRCROOT&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/ExportOptions.plist&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-exportPath&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$EXPORT_PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;APP_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$EXPORT_PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PRODUCT_NAME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.app&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ZIP_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$EXPORT_PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PRODUCT_NAME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.zip&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#如果不是打包成dmg，.app需要压缩成zip上传&lt;/span&gt;
ditto &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--keepParent&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$APP_PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ZIP_PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;接着将压缩好的zip文件，上传到苹果服务器进行公证，Xcode 13之后：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#使用--wait，告诉notarytool只有在公证服务完成处理提交后才退出&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#如果你想公证处理提交后得到一个回调，可以使用--webhook指定一个url&lt;/span&gt;
xcrun notarytool submit &lt;span class=&quot;nv&quot;&gt;$ZIP_PATH&lt;/span&gt;
                   &lt;span class=&quot;nt&quot;&gt;--keychain-profile&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AC_PASSWORD&quot;&lt;/span&gt;
                   &lt;span class=&quot;nt&quot;&gt;--wait&lt;/span&gt;
                   &lt;span class=&quot;nt&quot;&gt;--webhook&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://example.com/notarization&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Xcode 13之前：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#这里的ProviderShortname，其实是你的开发者账号的team id，可以通过https://developer.apple.com/account 「Membership」查看&lt;/span&gt;
xcrun altool &lt;span class=&quot;nt&quot;&gt;--notarize-app&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--primary-bundle-id&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.bundle.id&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--username&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AC_USERNAME&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--password&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;@keychain:AC_PASSWORD&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--asc-provider&lt;/span&gt; &amp;lt;ProviderShortname&amp;gt; &lt;span class=&quot;nt&quot;&gt;--file&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ZIP_PATH&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上传完之后，控制台上会打印&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RequestUUID&lt;/code&gt;,如果不成功或者想查询审核状态都需要这个id，也可以通过后面查询当前所有请求状态的命令查到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RequestUUID&lt;/code&gt;。&lt;br /&gt;
审核通过后，对app签入公证即可：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcrun stapler staple &lt;span class=&quot;s2&quot;&gt;&quot;xxx.dmg&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;查询当前所有请求状态&quot;&gt;查询当前所有请求状态&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcrun altool &lt;span class=&quot;nt&quot;&gt;--notarization-history&lt;/span&gt; 0 &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AC_USERNAME&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;@keychain:AC_PASSWORD&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;会返回你所有请求的状态&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Notarization History - page 0

Date                      RequestUUID                          Status      Status Code Status Message  
------------------------- ------------------------------------ ----------- ----------- ----------------
2018-07-02 20:32:01 +0000 2EFE2717-52EF-43A5-96DC-0797E4CA1041 invalid     2           Package Invalid 
2018-06-29 13:23:13 +0000 6D020E28-9890-48E5-851C-4275169D07CC invalid     2           Package Invalid

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;查询某个请求的详细信息&quot;&gt;查询某个请求的详细信息&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcrun altool &lt;span class=&quot;nt&quot;&gt;--notarization-info&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$替&lt;/span&gt;换成自己的RequestUUID &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AC_USERNAME&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;如果有审核有问题，LogFileURL会提供日志文件，指出发现的问题，修改完后重新提交即可。&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   RequestUUID: 2EFE2717-52EF-43A5-96DC-0797E4CA1041
          Date: 2018-07-02 20:32:01 +0000
        Status: invalid
    LogFileURL: https://osxapps.itunes.apple.com/...
   Status Code: 2 
Status Message: Package Invalid
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;写在最后的一些感触&quot;&gt;写在最后的一些感触&lt;/h1&gt;
&lt;p&gt;虽然是个并不麻烦的事情，但是很多大厂的App都没有做这个，感觉都是国内用户惯的，需要用户去适应App，而不是App迎合用户。&lt;/p&gt;

&lt;h1 id=&quot;参考链接&quot;&gt;参考链接&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/xcode/notarizing_macos_software_before_distribution&quot;&gt;Notarizing macOS Software Before Distribution&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/developer-id/&quot;&gt;Signing Your Apps for Gatekeeper&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://support.apple.com/en-us/HT202491&quot;&gt;Safely open apps on your Mac&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.apple.com/documentation/xcode/notarizing_macos_software_before_distribution/customizing_the_notarization_workflow&quot;&gt;Customizing the Notarization Workflow&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Jul 2020 00:00:00 +0800</pubDate>
        <link>http://www.foolishtalk.org/2020/07/08/Mac-App%E5%85%AC%E8%AF%81/</link>
        <guid isPermaLink="true">http://www.foolishtalk.org/2020/07/08/Mac-App%E5%85%AC%E8%AF%81/</guid>
        
        <category>iOS</category>
        
        <category>Xcode</category>
        
        
      </item>
    
      <item>
        <title>你真的了解p、po、v区别吗</title>
        <description>&lt;h1 id=&quot;正文&quot;&gt;正文&lt;/h1&gt;
&lt;p&gt;平常在使用Xcode断点调试问题时，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;po&lt;/code&gt;可能是最常用到的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LLVM&lt;/code&gt;命令了。&lt;br /&gt;
通过&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;po&lt;/code&gt;命令，我们可以在Xcode的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LLDB&lt;/code&gt;控制台打印对象的描述，系统在运行时会提供一个默认值，如图：&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/caed4a8d6cbafa4387d2fb57155cf6e7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们可以通过重写&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;func debugDescription()&lt;/code&gt;达到我们希望在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;po&lt;/code&gt;的时候返回预期的返回值。&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/54e45465efc65c1b4fd93f2d8995ea4e.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;po&lt;/code&gt;的底层逻辑实现：&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/57320d88124faf7812bbaa673f37fee4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;事实上打印对象有三种方法，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;po&lt;/code&gt;只是其中一种。&lt;/p&gt;

&lt;p&gt;第二种方式是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;p&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;p&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;po&lt;/code&gt;的区别在于，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;p&lt;/code&gt;不会随着&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;func debugDescription()&lt;/code&gt;方法修改而且改变打印的值。
&lt;img src=&quot;https://www.foolishtalk.org/cloud/0bb5fdda413e64e8b3ba45c58d1c2ec3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;p&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;po&lt;/code&gt;，遵循swift的语法，在下面的例子中，是无法打印的。&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/f65d30492a3fc575e641976544a7aa1e.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
同样下面的代码也会报错：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-Swift&quot;&gt;    let student : Person = Student(name:&quot;john&quot;)
    print(student.name) //这里是会报错的
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;p&lt;/code&gt;的底层逻辑实现：&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/e2b0f3feefd02283937b5230a420110d.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;第三种方式是通过&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v&lt;/code&gt;打印。&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v&lt;/code&gt;同样不会不会随着&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;func debugDescription()&lt;/code&gt;方法修改而且改变打印的值。&lt;br /&gt;
而且&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v&lt;/code&gt;有自己的语法，不需要通过编译，而是进行动态类型解析，但是它无法执行代码。&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/849c0b54225807f00201d31cd8bf072c.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v&lt;/code&gt;的底层逻辑实现：&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/67340b5668cffd5d75e007e1839d46fd.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;总结&quot;&gt;总结&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;po&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;p&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;v&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;显示对象的方式&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;通过对象描述方法打印&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;通过格式化打印&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;通过格式化打印&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;计算结果的方式&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;通过编译表达，可以完整访问编程语言&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;通过编译表达，可以完整访问编程语言&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;有自己的语法、解释和表达，解释过程中会多次动态类型解析&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;参考链接&quot;&gt;参考链接&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2019/429/&quot;&gt;LLDB: Beyond “po”&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 01 Jun 2020 00:00:00 +0800</pubDate>
        <link>http://www.foolishtalk.org/2020/06/01/%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BA%86%E8%A7%A3p-po-v%E5%8C%BA%E5%88%AB%E5%90%97-copy/</link>
        <guid isPermaLink="true">http://www.foolishtalk.org/2020/06/01/%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BA%86%E8%A7%A3p-po-v%E5%8C%BA%E5%88%AB%E5%90%97-copy/</guid>
        
        <category>iOS</category>
        
        <category>Xcode</category>
        
        
      </item>
    
      <item>
        <title>Modify iPhone positioning via Virtual Location</title>
        <description>&lt;h1 id=&quot;installation&quot;&gt;Installation:&lt;/h1&gt;

&lt;p&gt;Firstly, download &lt;a href=&quot;https://apps.apple.com/cn/app/%E8%99%9A%E6%8B%9F%E5%AE%9A%E4%BD%8D/id1459663647?mt=12&quot;&gt;Virtual Location App&lt;/a&gt; and &lt;a href=&quot;https://www.foolishtalk.org/magellan/magellan.dmg&quot;&gt;Magellan App&lt;/a&gt;. It requires running both these two apps to modify the location.&lt;/p&gt;

&lt;p&gt;The Virtual Location interface looks like this:
&lt;img src=&quot;https://www.foolishtalk.org/cloud/guide_en_1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;If Magellan is not installed, when the virtual location is first started, it will appear::
&lt;img src=&quot;https://www.foolishtalk.org/cloud/b7cdd9f10f727ca59420902b277aa9c8_en.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
Or, when double-clicking on the map, the following pop-up will appear：&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/14d2cba4eeda3d9fa77b1efd8a1aa6d9_en.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click on “Open Magellan Downloader”,If Magellan is installed successfully,
there is an ico at system navigation bar as following after &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Magellan App&lt;/code&gt; running successfully.&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/bc9e8955850855ca07147e65957f8087.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Magellan&lt;/code&gt; installation fails, please download and install it separately from &lt;a href=&quot;(https://www.foolishtalk.org/magellan/magellan.dmg)&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Connect the mobile phone to your computer, then choose your personal mobile.&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/d944f3a7aa0e20280cb65dff013839e6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If there is no installing the driver before, please click to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Install the driver &lt;/code&gt;firstly.&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/0d0da9bb126e3bd24ebfb83bd16ef3c0.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It will download the driver automatically for the first installing.&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/0fcda7c41ae4197d268c1a01bb2392a8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Please click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Install the Driver&lt;/code&gt; again after download successfully. After installation successfully, there will be following tips.&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/15393a5bdbede13840e344e94f5d4946.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It need to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Magellan app&lt;/code&gt; again after installation.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;operation&quot;&gt;Operation:&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Open &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Virtual Location App&lt;/code&gt;&lt;br /&gt;
There are two ways to modify the position as followings:&lt;br /&gt;
(1) &lt;br /&gt;
Select &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Point&lt;/code&gt;. Double click the map on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Virtual Location App&lt;/code&gt;. Then you will find your position on mobile phone has already changed.&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/guide_en_1.png&quot; alt=&quot;&quot; /&gt;)
(2) &lt;br /&gt;
① Select &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Route&lt;/code&gt;. Double click the map on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Virtual Location　App&lt;/code&gt;. There will be generated multi-spots on the map as picture shows.&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/guide_en_2.png&quot; alt=&quot;&quot; /&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;② Please input Speed and click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Start&lt;/code&gt; finally. You will find your mobile phone is moving along programmed route.&lt;/p&gt;

&lt;p&gt;If there are any questions, please feel free to contact me and send email to zykzzzz@hotmail.com. 
In most case, it is better to provide the log file will be helpful. Please click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Export log file&lt;/code&gt; to generate the log file by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Magellan App&lt;/code&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 19 Apr 2020 00:00:00 +0800</pubDate>
        <link>http://www.foolishtalk.org/2020/04/19/magellan_en/</link>
        <guid isPermaLink="true">http://www.foolishtalk.org/2020/04/19/magellan_en/</guid>
        
        <category>iOS</category>
        
        <category>Xcode</category>
        
        
      </item>
    
      <item>
        <title>mac连接蓝牙音箱问题小记</title>
        <description>&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;

&lt;p&gt;过年的时候，公司发了个蓝牙音箱，我的Mac Pro左声道已经坏了很久了，正好可以拿来当音箱用。&lt;br /&gt;
但是电脑连了蓝牙音箱后，一直会卡卡的和出现沙沙的声音，手机却没有问题，猜想是因为电脑码率比较高导致，带着这个猜想开始搜索相关的一些问题，发现原来不止这款音箱会，别的一些蓝牙设备，包括AirPods也会出现这样的问题。&lt;/p&gt;

&lt;h1 id=&quot;正文&quot;&gt;正文&lt;/h1&gt;

&lt;p&gt;先上一组电脑在放歌时的传输速率：&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/39ce65c86ee89caeba6d367d0f82786d.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;通过这组数据可以知道，在听歌的时候，传输速度约为 39000 Bytes/s,即 312 kbit/s（1 kbit/s = 125 Bytes/s）&lt;/p&gt;

&lt;p&gt;而我们公司的蓝牙音箱使用的是SBC编码器（小tips：按住option点击导航栏的蓝牙图标，可以查看蓝牙设备的信息）&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/347335e73c15512f3125ee4d60bac4f3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;原因&quot;&gt;原因&lt;/h2&gt;
&lt;p&gt;SBC编码器中的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bitpool&lt;/code&gt; 参数会导致音质下降，通过&lt;a href=&quot;http://soundexpert.org/encoders-320-kbps&quot;&gt;这里&lt;/a&gt;可以知道 SBC编码器 在 328 kbit/s 时 bitpool 需要达到 53。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.foolishtalk.org/cloud/ec4f4917854d7eab2b26196d3348df60.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;问题原因知道了，这样就好解决了。&lt;/p&gt;

&lt;h1 id=&quot;怎么解决&quot;&gt;怎么解决？&lt;/h1&gt;
&lt;p&gt;先去苹果开发者官网下载&lt;a href=&quot;https://developer.apple.com/download/more/?=additional%20Tools&quot;&gt;Bluetooth Explorer&lt;/a&gt;工具&lt;/p&gt;

&lt;p&gt;下载完之后，打开 Hardware，把 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bluetooth Explorer&lt;/code&gt; 拖到应用程序里。&lt;br /&gt;
打开 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bluetooth Explorer&lt;/code&gt; 后，在系统导航栏找到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Audio Options...&lt;/code&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/c1bfcd07315439afe2f2fd3ecdc744f4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;为了方便我就直接把这里 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Minimum bitpool&lt;/code&gt; 改到64了：&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/72d3eb4294d65375471054d6f1d290cc.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;另外如果有需要修改编码器的需求，改上面 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Codecs&lt;/code&gt; 的设置就好了。&lt;/p&gt;

&lt;p&gt;断开蓝牙设备，再连设备，就会发现没有之前的卡顿和沙沙的声音。&lt;/p&gt;

&lt;h1 id=&quot;题外话&quot;&gt;题外话&lt;/h1&gt;
&lt;p&gt;网上的文章真是一大抄，通过终端设置 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bitpool&lt;/code&gt; 的方法似乎已经失效了，另外我也试过重启 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PRAM&lt;/code&gt;，依然无效，如果有通过终端设置的方式，请告诉我，非常感谢。&lt;/p&gt;

&lt;h1 id=&quot;参考链接&quot;&gt;参考链接&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.areilly.com/2017/07/29/enabling-aac-and-aptx-over-bluetooth-on-macos/&quot;&gt;enabling aac and aptx over bluetooth on macos&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://apple.stackexchange.com/questions/167245/yosemite-bluetooth-audio-is-choppy-skips/259954#259954&quot;&gt;Yosemite bluetooth audio is choppy/skips&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 10 Jan 2020 00:00:00 +0800</pubDate>
        <link>http://www.foolishtalk.org/2020/01/10/mac%E8%BF%9E%E6%8E%A5%E8%93%9D%E7%89%99%E9%9F%B3%E7%AE%B1%E9%97%AE%E9%A2%98%E5%B0%8F%E8%AE%B0/</link>
        <guid isPermaLink="true">http://www.foolishtalk.org/2020/01/10/mac%E8%BF%9E%E6%8E%A5%E8%93%9D%E7%89%99%E9%9F%B3%E7%AE%B1%E9%97%AE%E9%A2%98%E5%B0%8F%E8%AE%B0/</guid>
        
        <category>iOS</category>
        
        <category>蓝牙</category>
        
        
      </item>
    
      <item>
        <title>pip折腾记</title>
        <description>&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;

&lt;p&gt;最近在公司的新电脑上，要用到一个python2编写的库，发现python版本默认已经是3.0了，pip也是默认使用pip3，但是网上很多是使用pip去安装环境，为了折腾这个环境，花了好长时间，记录一下。&lt;/p&gt;

&lt;h1 id=&quot;正文&quot;&gt;正文&lt;/h1&gt;
&lt;p&gt;pip安装先把安装的脚本下载下来：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget curl https://bootstrap.pypa.io/get-pip.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;如果默认的是python3，需要用指定python版本：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;python2.7 get-pip.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;安装的过程中，会发现各种超时，原因是要翻墙。我是通过privoxy实现http代理，如果环境没装，自己安装一下：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;privoxy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果brew安装太慢。。。再挂下代理：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export ALL_PROXY=socks5://127.0.0.1:portnumber
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在配置文件&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/local/etc/privoxy/config&lt;/code&gt;下面加上监听的端口号，以及本地socks5代理的端口号：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;listen-address 0.0.0.0:8118
forward-socks5 / localhost:1080 .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;启动privoxy：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; /usr/local/sbin/privoxy /usr/local/etc/privoxy/config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;检查是否启动成功：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;netstat &lt;span class=&quot;nt&quot;&gt;-na&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;8118
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;将 socks5 代理转化成 http 代理：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;http_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;http://localhost:8118&apos;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;https_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;http://localhost:8118&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;如果嫌每次设置麻烦，可以把这两行加在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.bash_profile&lt;/code&gt;下。
不想使用可以通过下面的命令取消：&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;unset &lt;/span&gt;http_proxy
&lt;span class=&quot;nb&quot;&gt;unset &lt;/span&gt;https_proxy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;参考链接：&lt;br /&gt;
&lt;a href=&quot;https://www.zhihu.com/question/31360766/answer/149140490&quot;&gt;Homebrew有比较快的源（mirror）吗？ - skytraveler的回答 - 知乎&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://double-c.github.io/2018/10/17/mac-ss-cmd/index.html&quot;&gt;Mac命令行终端下使用shadowsocks翻墙&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 07 Dec 2019 00:00:00 +0800</pubDate>
        <link>http://www.foolishtalk.org/2019/12/07/pip%E6%8A%98%E8%85%BE%E8%AE%B0/</link>
        <guid isPermaLink="true">http://www.foolishtalk.org/2019/12/07/pip%E6%8A%98%E8%85%BE%E8%AE%B0/</guid>
        
        <category>iOS</category>
        
        <category>Python</category>
        
        
      </item>
    
      <item>
        <title>使用虚拟定位修改iPhone定位</title>
        <description>&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;

&lt;p&gt;首先你需要通过Mac AppStore下载&lt;a href=&quot;https://apps.apple.com/cn/app/%E8%99%9A%E6%8B%9F%E5%AE%9A%E4%BD%8D/id1459663647?mt=12&quot;&gt;虚拟定位(点这下载)&lt;/a&gt;。
虚拟定位的界面如下：
&lt;img src=&quot;https://www.foolishtalk.org/cloud/guide_zh_1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;同时需要安装Magellan（下面会有详细说到）&lt;/p&gt;

&lt;h1 id=&quot;magellan如何运行&quot;&gt;Magellan如何运行&lt;/h1&gt;
&lt;p&gt;如果没有安装Magellan，在虚拟定位首次启动时，会出现:
&lt;img src=&quot;https://www.foolishtalk.org/cloud/b7cdd9f10f727ca59420902b277aa9c8_zh.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
或者在双击地图时，会出现以下弹窗：&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/14d2cba4eeda3d9fa77b1efd8a1aa6d9_zh.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击”打开 Magellan 下载器”&lt;/p&gt;

&lt;p&gt;运行成功后，状态栏上方会出现一顶小帽子图标。&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/bc9e8955850855ca07147e65957f8087.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果上面没有运行成功，请看文章最底部的单独安装Magellan教程。&lt;/p&gt;

&lt;h1 id=&quot;正文&quot;&gt;正文&lt;/h1&gt;

&lt;p&gt;首先手机要连接电脑，然后选择设备。&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/c81ff0aa45218b3cf8131ad8592eea96.png&quot; alt=&quot;&quot; /&gt;
然后再点击安装驱动：&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/d762c75e8c2838d7f7bd7d1afff0c881.png&quot; alt=&quot;&quot; /&gt;
如果出现：&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/2019_12_15_8.44.35.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
或者：&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/2019_12_15_8.46.55.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;如果是首次安装驱动记得要重新插拔一次手机不然可能会没法识别&quot;&gt;如果是首次安装驱动，记得要重新插拔一次手机，不然可能会没法识别。&lt;/h5&gt;
&lt;p&gt;如果等待超过2分钟没有反应，点击日志，会在桌面上生成一个“虚拟定位日志.txt”，可以通过邮箱zykzzzz@hotmail.com或者&lt;a href=&quot;https://weibo.com/u/2095454814&quot;&gt;微博&lt;/a&gt;联系到我，我会尽快帮你解决问题。&lt;/p&gt;

&lt;p&gt;接下来，打开&lt;a href=&quot;https://apps.apple.com/cn/app/%E8%99%9A%E6%8B%9F%E5%AE%9A%E4%BD%8D/id1459663647?mt=12&quot;&gt;虚拟定位&lt;/a&gt;，把手机连接上电脑。&lt;/p&gt;

&lt;p&gt;改定位的方式有两种：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;选中单点模式，双击虚拟定位App上的地图，就会发现手机上的定位已经被修改。
&lt;img src=&quot;https://www.foolishtalk.org/cloud/guide_zh_1.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;选中轨迹模式，直接双击地图，在地图上生成多个点，类似这样：
&lt;img src=&quot;https://www.foolishtalk.org/cloud/guide_zh_2.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;然后输入速度，最后点击&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;开始移动&lt;/code&gt;，你会发现手机正在按照规划的路线在移动。&lt;/p&gt;

&lt;h1 id=&quot;qa&quot;&gt;Q&amp;amp;A&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;显示“暂无可用设备”，找不到自己的设备怎么办？&lt;br /&gt;
先通过 iTunes 检查手机是否连接成功，如果是旧版本的 iTunes 有可能会导致无法检测到设备，iTunes 需要更新到最新版本。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;拿来改定位（玩游戏/打卡）会不会被封？&lt;br /&gt;
请勿用于违法/作弊行为，App的初心是用于平时开发测试定位移动。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;提示“暂不支持 xx 版本，请联系作者升级”，怎么办？&lt;br /&gt;
如果你之前已经安装过驱动了，就不需要管这个提示，依然可以正常使用，如果是从来没有安装过的，出现这个提示，请联系我，我会更新新的版本解决这个问题。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;修改定位是所有App都有用吗？&lt;br /&gt;
修改定位是全局的，整个App都会生效。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;手机需要越狱吗？&lt;br /&gt;
手机不需要越狱。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;支持iPad吗？&lt;br /&gt;
支持iPad。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;单独安装magellan&quot;&gt;单独安装Magellan&lt;/h1&gt;
&lt;p&gt;虚拟定位的每个版本都会内置最新的Magellan版本，一般来说不需要独立安装，下面这段的安装方式可以忽略。
&lt;a href=&quot;https://www.foolishtalk.org/magellan/magellan.dmg&quot;&gt;Magellan(点这下载)&lt;/a&gt;
Magellan 的使用方式很简单，下载后，把 App 拖进 应用程序文件夹中，
&lt;img src=&quot;https://www.foolishtalk.org/cloud/20191022225610.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
然后双击运行，就可以了。&lt;br /&gt;
有可能会出现这个弹窗，直接打开就好了。&lt;br /&gt;
&lt;img src=&quot;https://www.foolishtalk.org/cloud/20191022105549.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果出现无法打开，因为无法确认开发者的身份的弹窗时，可以在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;系统偏好设置-通用&lt;/code&gt;下方找到，点击仍要继续运行即可。&lt;/p&gt;
</description>
        <pubDate>Wed, 04 Dec 2019 00:00:00 +0800</pubDate>
        <link>http://www.foolishtalk.org/2019/12/04/magellan/</link>
        <guid isPermaLink="true">http://www.foolishtalk.org/2019/12/04/magellan/</guid>
        
        <category>iOS</category>
        
        <category>Xcode</category>
        
        
      </item>
    
  </channel>
</rss>

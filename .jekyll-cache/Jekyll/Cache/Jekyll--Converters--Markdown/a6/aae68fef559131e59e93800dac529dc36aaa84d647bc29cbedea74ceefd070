I"<p>流程：</p>

<blockquote>
  <p>先获取相机的实时数据，得到image，这里需要用到自定义相机
这里已经写的很详细了，我是参考了苹果的Demo自己写了一个  
 <a href="http://www.jianshu.com/p/5860087c8981">iOS开发–AVFoundation自定义相机</a> </p>
</blockquote>

<p>图像识别主要分为3种基于灰度相关，基于特征，基于关系。</p>
<blockquote>
  <p>这里也有详细的介绍<a href="https://www.zhihu.com/question/20771624"></a>
<a href="https://www.zhihu.com/question/20771624"></a>
<a href="https://www.zhihu.com/question/20771624">常用的图像匹配算法及优缺点有哪些？</a>
剩下的是一些参考过别的语言实现的资料，有些没写上因为当时找的时候记下来，只能贴上一些现在能找到的了
<a href="http://blog.csdn.net/luoweifu/article/details/8220992">看起来像它——图像搜索其实也不难</a>
<a href="http://blog.csdn.net/zouxy09/article/details/17471401">基于感知哈希算法的视觉目标跟踪</a>
<a href="http://blog.csdn.net/forthcriminson/article/details/8729000">感知哈希算法（Perceptual hash algorithm）的OpenCV实现</a></p>
</blockquote>

<p>1.缩小尺寸</p>

<p>去除高频和细节的最快方法是缩小图片，将图片缩小到8x8的尺寸，总共64个像素。不要保持纵横比，只需将其变成8*8的正方形。这样就可以比较任意大小的图片，摒弃不同尺寸、比例带来的图片差异。</p>

<p>2.转成灰色</p>

<p>将8*8的小图片转换成灰度图像，将64个像素的颜色(red,green,blue)转换成一种颜色（黑白灰度）。</p>

<p>3.计算灰度平均值</p>

<p>计算所有64个像素的灰度平均值。</p>

<p>4.比较像素灰度平均值</p>

<p>将每个像素的灰度，与平均值进行比较。大于或等于平均值，记为1；小于平均值，记为0。</p>

<p>组成出一段图片的hash值例如1010101001</p>

<p>5.比较两张图的hash值</p>

<p>例如</p>

<p>1010101001….1010101001</p>

<p>1010110101….1010110101</p>

<p>共64位，不相同的值小于5，说明非常相似，大于10说明有差距</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code>

<span class="k">-</span> <span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nf">getSuitabilityWithImageA</span><span class="p">:(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nv">imageA</span> <span class="nf">imageB</span><span class="p">:(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nv">imageB</span><span class="p">{</span>
<span class="err">  </span> <span class="err"> </span>
<span class="err"> </span> <span class="err"> </span> <span class="n">self</span><span class="p">.</span><span class="n">imageA</span><span class="err"> </span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nf">getGrayImage</span><span class="p">:[</span><span class="n">imageA</span> <span class="nf">scaleToSize</span><span class="p">:</span><span class="n">CGSizeMake</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">8</span><span class="p">)]];</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">self</span><span class="p">.</span><span class="n">imageB</span><span class="err"> </span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nf">getGrayImage</span><span class="p">:[</span><span class="n">imageB</span> <span class="nf">scaleToSize</span><span class="p">:</span><span class="n">CGSizeMake</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">8</span><span class="p">)]];</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">return</span> <span class="p">[</span><span class="n">self</span> <span class="nf">similarityArrayA</span><span class="p">:[</span><span class="n">self</span> <span class="nf">similarityValueWithImage</span><span class="p">:</span><span class="n">self</span><span class="p">.</span><span class="n">imageA</span><span class="p">]</span> <span class="nf">similarityArrayB</span><span class="p">:[</span><span class="n">self</span> <span class="nf">similarityValueWithImage</span><span class="p">:</span><span class="n">self</span><span class="p">.</span><span class="n">imageB</span><span class="p">]];</span>
<span class="p">}</span>
<span class="c1">//比较两张图的哈希值</span>
<span class="k">-</span> <span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nf">similarityArrayA</span><span class="p">:(</span><span class="n">NSArray</span> <span class="o">*</span><span class="p">)</span><span class="nv">arrayA</span> <span class="nf">similarityArrayB</span><span class="p">:(</span><span class="n">NSArray</span> <span class="o">*</span><span class="p">)</span><span class="nv">arrayB</span><span class="p">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="n">NSInteger</span> <span class="n">similarity</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">for</span> <span class="p">(</span><span class="n">NSInteger</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">arrayA</span><span class="p">.</span><span class="n">count</span> <span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="k">if</span> <span class="p">([</span><span class="n">arrayA</span><span class="p">[</span><span class="nf">i</span><span class="p">]</span> <span class="nf">isEqualToNumber</span><span class="p">:</span><span class="n">arrayB</span><span class="p">[</span><span class="nf">i</span><span class="p">]])</span> <span class="p">{</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="n">similarity</span><span class="o">++</span><span class="p">;</span>
<span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="err"> </span> <span class="p">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="p">}</span>
<span class="err"> </span> <span class="err"> </span> <span class="k">return</span> <span class="p">(</span><span class="mi">64</span><span class="o">-</span><span class="n">similarity</span><span class="p">);</span>
<span class="p">}</span>


</code></pre></div></div>

<p>之前一直没有忘了放demo，正好最近在用swift，顺便把图像识别也放进去
<a href="https://github.com/Fidetro/FIDToolKit">demo地址</a></p>
:ET